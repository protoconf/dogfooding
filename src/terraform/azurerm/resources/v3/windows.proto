syntax = "proto3";

// Provider: azurerm 3
package terraform.azurerm.resources.v3;

import "google/protobuf/struct.proto";

import "terraform/v1/meta.proto";

// AzurermWindowsFunctionApp version is 1
message AzurermWindowsFunctionApp {
  // A map of key-value pairs for [App
  // s](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings)
  // and custom values.
  map<string, string> app_settings = 1 [json_name = "app_settings"];

  // Should built in logging be enabled. Configures `AzureWebJobsDashboard` app
  // setting based on the configured storage setting
  bool builtin_logging_enabled = 2 [json_name = "builtin_logging_enabled"];

  // Should the function app use Client Certificates
  bool client_certificate_enabled = 3 [json_name = "client_certificate_enabled"];

  // Paths to exclude when using client certificates, separated by ;
  string client_certificate_exclusion_paths = 4 [json_name = "client_certificate_exclusion_paths"];

  // The mode of the Function App's client certificates requirement for incoming
  // requests. Possible values are `Required`, `Optional`, and
  // `OptionalInteractiveUser`
  string client_certificate_mode = 5 [json_name = "client_certificate_mode"];

  // Force disable the content share settings.
  bool content_share_force_disabled = 6 [json_name = "content_share_force_disabled"];

  string custom_domain_verification_id = 7 [json_name = "custom_domain_verification_id"];

  // The amount of memory in gigabyte-seconds that your application is allowed to
  // consume per day. Setting this value only affects function apps in Consumption
  // Plans.
  int64 daily_memory_time_quota = 8 [json_name = "daily_memory_time_quota"];

  string default_hostname = 9 [json_name = "default_hostname"];

  // Is the Windows Function App enabled.
  bool enabled = 10;

  bool ftp_publish_basic_authentication_enabled = 11 [
    json_name = "ftp_publish_basic_authentication_enabled"
  ];

  // The runtime version associated with the Function App.
  string functions_extension_version = 12 [json_name = "functions_extension_version"];

  string hosting_environment_id = 13 [json_name = "hosting_environment_id"];

  // Can the Function App only be accessed via HTTPS?
  bool https_only = 14 [json_name = "https_only"];

  string id = 15;

  // The User Assigned Identity to use for Key Vault access.
  string key_vault_reference_identity_id = 16 [json_name = "key_vault_reference_identity_id"];

  string kind = 17;

  string location = 18;

  // Specifies the name of the Function App.
  string name = 19;

  repeated string outbound_ip_address_list = 20 [json_name = "outbound_ip_address_list"];

  string outbound_ip_addresses = 21 [json_name = "outbound_ip_addresses"];

  repeated string possible_outbound_ip_address_list = 22 [json_name = "possible_outbound_ip_address_list"];

  string possible_outbound_ip_addresses = 23 [json_name = "possible_outbound_ip_addresses"];

  bool public_network_access_enabled = 24 [json_name = "public_network_access_enabled"];

  string resource_group_name = 25 [json_name = "resource_group_name"];

  // The ID of the App Service Plan within which to create this Function App
  string service_plan_id = 26 [json_name = "service_plan_id"];

  repeated SiteCredential site_credential = 27 [json_name = "site_credential"];

  // The access key which will be used to access the storage account for the Function
  // App.
  string storage_account_access_key = 28 [json_name = "storage_account_access_key"];

  // The backend storage account name which will be used by this Function App.
  string storage_account_name = 29 [json_name = "storage_account_name"];

  // The Key Vault Secret ID, including version, that contains the Connection String
  // to connect to the storage account for this Function App.
  string storage_key_vault_secret_id = 30 [json_name = "storage_key_vault_secret_id"];

  // Should the Function App use its Managed Identity to access storage?
  bool storage_uses_managed_identity = 31 [json_name = "storage_uses_managed_identity"];

  map<string, string> tags = 32;

  string virtual_network_subnet_id = 33 [json_name = "virtual_network_subnet_id"];

  bool webdeploy_publish_basic_authentication_enabled = 34 [
    json_name = "webdeploy_publish_basic_authentication_enabled"
  ];

  // The local path and filename of the Zip packaged application to deploy to this
  // Windows Function App. **Note:** Using this value requires
  // `WEBSITE_RUN_FROM_PACKAGE=1` to be set on the App in `app_settings`.
  string zip_deploy_file = 35 [json_name = "zip_deploy_file"];

  AuthSettings auth_settings = 36 [json_name = "auth_settings"];

  AuthSettingsV2 auth_settings_v2 = 37 [json_name = "auth_settings_v2"];

  Backup backup = 38;

  repeated ConnectionString connection_string = 39 [json_name = "connection_string"];

  Identity identity = 40;

  SiteConfig site_config = 41 [json_name = "site_config"];

  StickySettings sticky_settings = 42 [json_name = "sticky_settings"];

  repeated StorageAccount storage_account = 43 [json_name = "storage_account"];

  repeated Timeouts timeouts = 44;

  google.protobuf.Value for_each = 45 [json_name = "for_each"];

  repeated string depends_on = 46 [json_name = "depends_on"];

  int32 count = 47;

  string provider = 48;

  terraform.v1.Lifecycle lifecycle = 49;

  message SiteCredential {
    // name: string
    string name = 1;

    // password: string
    string password = 2;
  }

  message AuthSettings {
    // Specifies a map of Login Parameters to send to the OpenID Connect authorization
    // endpoint when a user logs in.
    map<string, string> additional_login_parameters = 1 [json_name = "additional_login_parameters"];

    // Specifies a list of External URLs that can be redirected to as part of logging in
    // or logging out of the Windows Web App.
    repeated string allowed_external_redirect_urls = 2 [json_name = "allowed_external_redirect_urls"];

    // The default authentication provider to use when multiple providers are
    // configured. Possible values include: `AzureActiveDirectory`, `Facebook`,
    // `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
    string default_provider = 3 [json_name = "default_provider"];

    // Should the Authentication / Authorization feature be enabled?
    bool enabled = 4;

    // The OpenID Connect Issuer URI that represents the entity which issues access
    // tokens.
    string issuer = 5;

    // The RuntimeVersion of the Authentication / Authorization feature in use.
    string runtime_version = 6 [json_name = "runtime_version"];

    // The number of hours after session token expiration that a session token can be
    // used to call the token refresh API. Defaults to `72` hours.
    int64 token_refresh_extension_hours = 7 [json_name = "token_refresh_extension_hours"];

    // Should the Windows Web App durably store platform-specific security tokens that
    // are obtained during login flows? Defaults to `false`.
    bool token_store_enabled = 8 [json_name = "token_store_enabled"];

    // The action to take when an unauthenticated client attempts to access the app.
    // Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
    string unauthenticated_client_action = 9 [json_name = "unauthenticated_client_action"];

    ActiveDirectory active_directory = 10 [json_name = "active_directory"];

    Facebook facebook = 11;

    Github github = 12;

    Google google = 13;

    Microsoft microsoft = 14;

    Twitter twitter = 15;

    message ActiveDirectory {
      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 2 [json_name = "client_id"];

      // The Client Secret for the Client ID. Cannot be used with
      // `client_secret_setting_name`.
      string client_secret = 3 [json_name = "client_secret"];

      // The App Setting name that contains the client secret of the Client. Cannot be
      // used with `client_secret`.
      string client_secret_setting_name = 4 [json_name = "client_secret_setting_name"];
    }

    message Facebook {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The App Secret of the Facebook app used for Facebook Login. Cannot be specified
      // with `app_secret_setting_name`.
      string app_secret = 2 [json_name = "app_secret"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login. Cannot be specified with `app_secret`.
      string app_secret_setting_name = 3 [json_name = "app_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login
      // authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Github {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The Client Secret of the GitHub app used for GitHub Login. Cannot be specified
      // with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Google {
      // The OpenID Connect Client ID for the Google web application.
      string client_id = 1 [json_name = "client_id"];

      // The client secret associated with the Google web application.  Cannot be
      // specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of Google
      // Sign-In authentication. If not specified, "openid", "profile", and "email" are
      // used as default scopes.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Microsoft {
      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 1 [json_name = "client_id"];

      // The OAuth 2.0 client secret that was created for the app used for authentication.
      // Cannot be specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account
      // authentication. If not specified, `wl.basic` is used as the default scope.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Twitter {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
      // Cannot be specified with `consumer_secret_setting_name`.
      string consumer_secret = 2 [json_name = "consumer_secret"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in. Cannot be specified with `consumer_secret`.
      string consumer_secret_setting_name = 3 [json_name = "consumer_secret_setting_name"];
    }
  }

  message AuthSettingsV2 {
    // Should the AuthV2 Settings be enabled. Defaults to `false`
    bool auth_enabled = 1 [json_name = "auth_enabled"];

    // The path to the App Auth settings. **Note:** Relative Paths are evaluated from
    // the Site Root directory.
    string config_file_path = 2 [json_name = "config_file_path"];

    // The Default Authentication Provider to use when the `unauthenticated_action` is
    // set to `RedirectToLoginPage`. Possible values include: `apple`,
    // `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name`
    // of your `custom_oidc_v2` provider.
    string default_provider = 3 [json_name = "default_provider"];

    // The paths which should be excluded from the `unauthenticated_action` when it is
    // set to `RedirectToLoginPage`.
    repeated string excluded_paths = 4 [json_name = "excluded_paths"];

    // The convention used to determine the url of the request made. Possible values
    // include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`,
    // `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
    string forward_proxy_convention = 5 [json_name = "forward_proxy_convention"];

    // The name of the header containing the host of the request.
    string forward_proxy_custom_host_header_name = 6 [
      json_name = "forward_proxy_custom_host_header_name"
    ];

    // The name of the header containing the scheme of the request.
    string forward_proxy_custom_scheme_header_name = 7 [
      json_name = "forward_proxy_custom_scheme_header_name"
    ];

    // The prefix that should precede all the authentication and authorisation paths.
    // Defaults to `/.auth`
    string http_route_api_prefix = 8 [json_name = "http_route_api_prefix"];

    // Should the authentication flow be used for all requests.
    bool require_authentication = 9 [json_name = "require_authentication"];

    // Should HTTPS be required on connections? Defaults to true.
    bool require_https = 10 [json_name = "require_https"];

    // The Runtime Version of the Authentication and Authorisation feature of this App.
    // Defaults to `~1`
    string runtime_version = 11 [json_name = "runtime_version"];

    // The action to take for requests made without authentication. Possible values
    // include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`.
    // Defaults to `RedirectToLoginPage`.
    string unauthenticated_action = 12 [json_name = "unauthenticated_action"];

    ActiveDirectoryV2 active_directory_v2 = 13 [json_name = "active_directory_v2"];

    AppleV2 apple_v2 = 14 [json_name = "apple_v2"];

    AzureStaticWebAppV2 azure_static_web_app_v2 = 15 [json_name = "azure_static_web_app_v2"];

    repeated CustomOidcV2 custom_oidc_v2 = 16 [json_name = "custom_oidc_v2"];

    FacebookV2 facebook_v2 = 17 [json_name = "facebook_v2"];

    GithubV2 github_v2 = 18 [json_name = "github_v2"];

    GoogleV2 google_v2 = 19 [json_name = "google_v2"];

    Login login = 20;

    MicrosoftV2 microsoft_v2 = 21 [json_name = "microsoft_v2"];

    TwitterV2 twitter_v2 = 22 [json_name = "twitter_v2"];

    message ActiveDirectoryV2 {
      // The list of allowed Applications for the Default Authorisation Policy.
      repeated string allowed_applications = 1 [json_name = "allowed_applications"];

      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 2 [json_name = "allowed_audiences"];

      // The list of allowed Group Names for the Default Authorisation Policy.
      repeated string allowed_groups = 3 [json_name = "allowed_groups"];

      // The list of allowed Identities for the Default Authorisation Policy.
      repeated string allowed_identities = 4 [json_name = "allowed_identities"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 5 [json_name = "client_id"];

      // The thumbprint of the certificate used for signing purposes.
      string client_secret_certificate_thumbprint = 6 [json_name = "client_secret_certificate_thumbprint"];

      // The App Setting name that contains the client secret of the Client.
      string client_secret_setting_name = 7 [json_name = "client_secret_setting_name"];

      // A list of Allowed Client Applications in the JWT Claim.
      repeated string jwt_allowed_client_applications = 8 [json_name = "jwt_allowed_client_applications"];

      // A list of Allowed Groups in the JWT Claim.
      repeated string jwt_allowed_groups = 9 [json_name = "jwt_allowed_groups"];

      // A map of key-value pairs to send to the Authorisation Endpoint when a user logs
      // in.
      map<string, string> login_parameters = 10 [json_name = "login_parameters"];

      // The Azure Tenant Endpoint for the Authenticating Tenant. e.g.
      // `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
      string tenant_auth_endpoint = 11 [json_name = "tenant_auth_endpoint"];

      // Should the www-authenticate provider should be omitted from the request? Defaults
      // to `false`
      bool www_authentication_disabled = 12 [json_name = "www_authentication_disabled"];
    }

    message AppleV2 {
      // The OpenID Connect Client ID for the Apple web application.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Apple
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message AzureStaticWebAppV2 {
      // The ID of the Client to use to authenticate with Azure Static Web App
      // Authentication.
      string client_id = 1 [json_name = "client_id"];
    }

    message CustomOidcV2 {
      // The endpoint to make the Authorisation Request.
      string authorisation_endpoint = 1 [json_name = "authorisation_endpoint"];

      // The endpoint that provides the keys necessary to validate the token.
      string certification_uri = 2 [json_name = "certification_uri"];

      // The Client Credential Method used. Currently the only supported value is
      // `ClientSecretPost`.
      string client_credential_method = 3 [json_name = "client_credential_method"];

      // The ID of the Client to use to authenticate with this Custom OIDC.
      string client_id = 4 [json_name = "client_id"];

      // The App Setting name that contains the secret for this Custom OIDC Client.
      string client_secret_setting_name = 5 [json_name = "client_secret_setting_name"];

      // The endpoint that issued the Token.
      string issuer_endpoint = 6 [json_name = "issuer_endpoint"];

      // The name of the Custom OIDC Authentication Provider.
      string name = 7;

      // The name of the claim that contains the users name.
      string name_claim_type = 8 [json_name = "name_claim_type"];

      // The endpoint that contains all the configuration endpoints for this Custom OIDC
      // provider.
      string openid_configuration_endpoint = 9 [json_name = "openid_configuration_endpoint"];

      // The list of the scopes that should be requested while authenticating.
      repeated string scopes = 10;

      // The endpoint used to request a Token.
      string token_endpoint = 11 [json_name = "token_endpoint"];
    }

    message FacebookV2 {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login.
      string app_secret_setting_name = 2 [json_name = "app_secret_setting_name"];

      // The version of the Facebook API to be used while logging in.
      string graph_api_version = 3 [json_name = "graph_api_version"];

      // Specifies a list of scopes to be requested as part of Facebook Login
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message GithubV2 {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message GoogleV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Google
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OpenID Connect Client ID for the Google web application.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of Login scopes that will be requested as part of Google Sign-In
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message Login {
      // External URLs that can be redirected to as part of logging in or logging out of
      // the app. This is an advanced setting typically only needed by Windows Store
      // application backends. **Note:** URLs within the current domain are always
      // implicitly allowed.
      repeated string allowed_external_redirect_urls = 1 [json_name = "allowed_external_redirect_urls"];

      // The method by which cookies expire. Possible values include: `FixedTime`, and
      // `IdentityProviderDerived`. Defaults to `FixedTime`.
      string cookie_expiration_convention = 2 [json_name = "cookie_expiration_convention"];

      // The time after the request is made when the session cookie should expire.
      // Defaults to `08:00:00`.
      string cookie_expiration_time = 3 [json_name = "cookie_expiration_time"];

      // The endpoint to which logout requests should be made.
      string logout_endpoint = 4 [json_name = "logout_endpoint"];

      // The time after the request is made when the nonce should expire. Defaults to
      // `00:05:00`.
      string nonce_expiration_time = 5 [json_name = "nonce_expiration_time"];

      // Should the fragments from the request be preserved after the login request is
      // made. Defaults to `false`.
      bool preserve_url_fragments_for_logins = 6 [json_name = "preserve_url_fragments_for_logins"];

      // The number of hours after session token expiration that a session token can be
      // used to call the token refresh API. Defaults to `72` hours.
      int64 token_refresh_extension_time = 7 [json_name = "token_refresh_extension_time"];

      // Should the Token Store configuration Enabled. Defaults to `false`
      bool token_store_enabled = 8 [json_name = "token_store_enabled"];

      // The directory path in the App Filesystem in which the tokens will be stored.
      string token_store_path = 9 [json_name = "token_store_path"];

      // The name of the app setting which contains the SAS URL of the blob storage
      // containing the tokens.
      string token_store_sas_setting_name = 10 [json_name = "token_store_sas_setting_name"];

      // Should the nonce be validated while completing the login flow. Defaults to
      // `true`.
      bool validate_nonce = 11 [json_name = "validate_nonce"];
    }

    message MicrosoftV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Microsoft
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of Login scopes that will be requested as part of Microsoft Account
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message TwitterV2 {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in.
      string consumer_secret_setting_name = 2 [json_name = "consumer_secret_setting_name"];
    }
  }

  message Backup {
    // Should this backup job be enabled?
    bool enabled = 1;

    // The name which should be used for this Backup.
    string name = 2;

    // The SAS URL to the container.
    string storage_account_url = 3 [json_name = "storage_account_url"];

    Schedule schedule = 4;

    message Schedule {
      // How often the backup should be executed (e.g. for weekly backup, this should be
      // set to `7` and `frequency_unit` should be set to `Day`).
      int64 frequency_interval = 1 [json_name = "frequency_interval"];

      // The unit of time for how often the backup should take place. Possible values
      // include: `Day` and `Hour`.
      string frequency_unit = 2 [json_name = "frequency_unit"];

      // Should the service keep at least one backup, regardless of age of backup.
      // Defaults to `false`.
      bool keep_at_least_one_backup = 3 [json_name = "keep_at_least_one_backup"];

      // The time the backup was last attempted.
      string last_execution_time = 4 [json_name = "last_execution_time"];

      // After how many days backups should be deleted.
      int64 retention_period_days = 5 [json_name = "retention_period_days"];

      // When the schedule should start working in RFC-3339 format.
      string start_time = 6 [json_name = "start_time"];
    }
  }

  message ConnectionString {
    // The name which should be used for this Connection.
    string name = 1;

    // Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`,
    // `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`,
    // `RedisCache`, and `PostgreSQL`.
    string type = 2;

    // The connection string value.
    string value = 3;
  }

  message Identity {
    repeated string identity_ids = 1 [json_name = "identity_ids"];

    string principal_id = 2 [json_name = "principal_id"];

    string tenant_id = 3 [json_name = "tenant_id"];

    string type = 4;
  }

  message SiteConfig {
    // If this Windows Web App is Always On enabled. Defaults to `false`.
    bool always_on = 1 [json_name = "always_on"];

    // The URL of the API definition that describes this Windows Function App.
    string api_definition_url = 2 [json_name = "api_definition_url"];

    // The ID of the API Management API for this Windows Function App.
    string api_management_api_id = 3 [json_name = "api_management_api_id"];

    // The program and any arguments used to launch this app via the command line.
    // (Example `node myapp.js`).
    string app_command_line = 4 [json_name = "app_command_line"];

    // The number of workers this function app can scale out to. Only applicable to apps
    // on the Consumption and Premium plan.
    int64 app_scale_limit = 5 [json_name = "app_scale_limit"];

    // The Connection String for linking the Windows Function App to Application
    // Insights.
    string application_insights_connection_string = 6 [
      json_name = "application_insights_connection_string"
    ];

    // The Instrumentation Key for connecting the Windows Function App to Application
    // Insights.
    string application_insights_key = 7 [json_name = "application_insights_key"];

    // Specifies a list of Default Documents for the Windows Web App.
    repeated string default_documents = 8 [json_name = "default_documents"];

    // Is detailed error logging enabled
    bool detailed_error_logging_enabled = 9 [json_name = "detailed_error_logging_enabled"];

    // The number of minimum instances for this Windows Function App. Only affects apps
    // on Elastic Premium plans.
    int64 elastic_instance_minimum = 10 [json_name = "elastic_instance_minimum"];

    // State of FTP / FTPS service for this function app. Possible values include:
    // `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
    string ftps_state = 11 [json_name = "ftps_state"];

    // The amount of time in minutes that a node is unhealthy before being removed from
    // the load balancer. Possible values are between `2` and `10`. Defaults to `10`.
    // Only valid in conjunction with `health_check_path`
    int64 health_check_eviction_time_in_min = 12 [json_name = "health_check_eviction_time_in_min"];

    // The path to be checked for this function app health.
    string health_check_path = 13 [json_name = "health_check_path"];

    // Specifies if the http2 protocol should be enabled. Defaults to `false`.
    bool http2_enabled = 14 [json_name = "http2_enabled"];

    string ip_restriction_default_action = 15 [json_name = "ip_restriction_default_action"];

    // The Site load balancing mode. Possible values include: `WeightedRoundRobin`,
    // `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`,
    // `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
    string load_balancing_mode = 16 [json_name = "load_balancing_mode"];

    // The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`.
    // Defaults to `Integrated`.
    string managed_pipeline_mode = 17 [json_name = "managed_pipeline_mode"];

    // The configures the minimum version of TLS required for SSL requests. Possible
    // values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
    string minimum_tls_version = 18 [json_name = "minimum_tls_version"];

    // The number of pre-warmed instances for this function app. Only affects apps on an
    // Elastic Premium plan.
    int64 pre_warmed_instance_count = 19 [json_name = "pre_warmed_instance_count"];

    // Should Remote Debugging be enabled. Defaults to `false`.
    bool remote_debugging_enabled = 20 [json_name = "remote_debugging_enabled"];

    // The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and
    // `VS2022`
    string remote_debugging_version = 21 [json_name = "remote_debugging_version"];

    // Should Functions Runtime Scale Monitoring be enabled.
    bool runtime_scale_monitoring_enabled = 22 [json_name = "runtime_scale_monitoring_enabled"];

    string scm_ip_restriction_default_action = 23 [json_name = "scm_ip_restriction_default_action"];

    // Configures the minimum version of TLS required for SSL requests to the SCM site
    // Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
    string scm_minimum_tls_version = 24 [json_name = "scm_minimum_tls_version"];

    // The SCM Type in use by the Windows Function App.
    string scm_type = 25 [json_name = "scm_type"];

    // Should the Windows Function App `ip_restriction` configuration be used for the
    // SCM also.
    bool scm_use_main_ip_restriction = 26 [json_name = "scm_use_main_ip_restriction"];

    // Should the Windows Web App use a 32-bit worker.
    bool use_32_bit_worker = 27 [json_name = "use_32_bit_worker"];

    // Should all outbound traffic to have Virtual Network Security Groups and User
    // Defined Routes applied? Defaults to `false`.
    bool vnet_route_all_enabled = 28 [json_name = "vnet_route_all_enabled"];

    // Should Web Sockets be enabled. Defaults to `false`.
    bool websockets_enabled = 29 [json_name = "websockets_enabled"];

    // The Windows FX Version string.
    string windows_fx_version = 30 [json_name = "windows_fx_version"];

    // The number of Workers for this Windows Function App.
    int64 worker_count = 31 [json_name = "worker_count"];

    AppServiceLogs app_service_logs = 32 [json_name = "app_service_logs"];

    ApplicationStack application_stack = 33 [json_name = "application_stack"];

    Cors cors = 34;

    repeated IpRestriction ip_restriction = 35 [json_name = "ip_restriction"];

    repeated ScmIpRestriction scm_ip_restriction = 36 [json_name = "scm_ip_restriction"];

    message AppServiceLogs {
      // The amount of disk space to use for logs. Valid values are between `25` and
      // `100`.
      int64 disk_quota_mb = 1 [json_name = "disk_quota_mb"];

      // The retention period for logs in days. Valid values are between `0` and `99999`.
      // Defaults to `0` (never delete).
      int64 retention_period_days = 2 [json_name = "retention_period_days"];
    }

    message ApplicationStack {
      // The version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0` and `v7.0`
      string dotnet_version = 1 [json_name = "dotnet_version"];

      // The version of Java to use. Possible values are `1.8`, `11` and `17`
      string java_version = 2 [json_name = "java_version"];

      // The version of Node to use. Possible values include `12`, `14`, `16` and `18`
      string node_version = 3 [json_name = "node_version"];

      // The PowerShell Core version to use. Possible values are `7`, and `7.2`
      string powershell_core_version = 4 [json_name = "powershell_core_version"];

      // Does the Function App use a custom Application Stack?
      bool use_custom_runtime = 5 [json_name = "use_custom_runtime"];

      // Should the DotNet process use an isolated runtime. Defaults to `false`.
      bool use_dotnet_isolated_runtime = 6 [json_name = "use_dotnet_isolated_runtime"];
    }

    message Cors {
      // Specifies a list of origins that should be allowed to make cross-origin calls.
      repeated string allowed_origins = 1 [json_name = "allowed_origins"];

      // Are credentials allowed in CORS requests? Defaults to `false`.
      bool support_credentials = 2 [json_name = "support_credentials"];
    }

    message IpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }

    message ScmIpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }
  }

  message StickySettings {
    repeated string app_setting_names = 1 [json_name = "app_setting_names"];

    repeated string connection_string_names = 2 [json_name = "connection_string_names"];
  }

  message StorageAccount {
    string access_key = 1 [json_name = "access_key"];

    string account_name = 2 [json_name = "account_name"];

    string mount_path = 3 [json_name = "mount_path"];

    string name = 4;

    string share_name = 5 [json_name = "share_name"];

    string type = 6;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string read = 3;

    string update = 4;
  }
}

// AzurermWindowsFunctionAppSlot version is 1
message AzurermWindowsFunctionAppSlot {
  // A map of key-value pairs for [App
  // s](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings)
  // and custom values.
  map<string, string> app_settings = 1 [json_name = "app_settings"];

  // Should built in logging be enabled. Configures `AzureWebJobsDashboard` app
  // setting based on the configured storage setting.
  bool builtin_logging_enabled = 2 [json_name = "builtin_logging_enabled"];

  // Should the Function App Slot use Client Certificates.
  bool client_certificate_enabled = 3 [json_name = "client_certificate_enabled"];

  // Paths to exclude when using client certificates, separated by ;
  string client_certificate_exclusion_paths = 4 [json_name = "client_certificate_exclusion_paths"];

  // The mode of the Function App Slot's client certificates requirement for incoming
  // requests. Possible values are `Required`, `Optional`, and
  // `OptionalInteractiveUser`.
  string client_certificate_mode = 5 [json_name = "client_certificate_mode"];

  // Force disable the content share settings.
  bool content_share_force_disabled = 6 [json_name = "content_share_force_disabled"];

  // The identifier used by App Service to perform domain ownership verification via
  // DNS TXT record.
  string custom_domain_verification_id = 7 [json_name = "custom_domain_verification_id"];

  // The amount of memory in gigabyte-seconds that your application is allowed to
  // consume per day. Setting this value only affects function apps in Consumption
  // Plans.
  int64 daily_memory_time_quota = 8 [json_name = "daily_memory_time_quota"];

  // The default hostname of the Windows Function App Slot.
  string default_hostname = 9 [json_name = "default_hostname"];

  // Is the Windows Function App Slot enabled.
  bool enabled = 10;

  bool ftp_publish_basic_authentication_enabled = 11 [
    json_name = "ftp_publish_basic_authentication_enabled"
  ];

  // The ID of the Windows Function App this Slot is a member of.
  string function_app_id = 12 [json_name = "function_app_id"];

  // The runtime version associated with the Function App Slot.
  string functions_extension_version = 13 [json_name = "functions_extension_version"];

  string hosting_environment_id = 14 [json_name = "hosting_environment_id"];

  // Can the Function App Slot only be accessed via HTTPS?
  bool https_only = 15 [json_name = "https_only"];

  string id = 16;

  // The User Assigned Identity to use for Key Vault access.
  string key_vault_reference_identity_id = 17 [json_name = "key_vault_reference_identity_id"];

  // The Kind value for this Windows Function App Slot.
  string kind = 18;

  // Specifies the name of the Windows Function App Slot.
  string name = 19;

  // A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`.
  repeated string outbound_ip_address_list = 20 [json_name = "outbound_ip_address_list"];

  // A comma separated list of outbound IP addresses as a string. For example
  // `52.23.25.3,52.143.43.12`.
  string outbound_ip_addresses = 21 [json_name = "outbound_ip_addresses"];

  // A list of possible outbound IP addresses, not all of which are necessarily in
  // use. This is a superset of `outbound_ip_address_list`. For example
  // `["52.23.25.3", "52.143.43.12"]`.
  repeated string possible_outbound_ip_address_list = 22 [json_name = "possible_outbound_ip_address_list"];

  // A comma separated list of possible outbound IP addresses as a string. For example
  // `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of
  // `outbound_ip_addresses`. For example `["52.23.25.3",
  // "52.143.43.12","52.143.43.17"]`.
  string possible_outbound_ip_addresses = 23 [json_name = "possible_outbound_ip_addresses"];

  bool public_network_access_enabled = 24 [json_name = "public_network_access_enabled"];

  string service_plan_id = 25 [json_name = "service_plan_id"];

  repeated SiteCredential site_credential = 26 [json_name = "site_credential"];

  // The access key which will be used to access the storage account for the Function
  // App Slot.
  string storage_account_access_key = 27 [json_name = "storage_account_access_key"];

  // The backend storage account name which will be used by this Function App Slot.
  string storage_account_name = 28 [json_name = "storage_account_name"];

  // The Key Vault Secret ID, including version, that contains the Connection String
  // to connect to the storage account for this Function App.
  string storage_key_vault_secret_id = 29 [json_name = "storage_key_vault_secret_id"];

  // Should the Function App Slot use its Managed Identity to access storage?
  bool storage_uses_managed_identity = 30 [json_name = "storage_uses_managed_identity"];

  map<string, string> tags = 31;

  string virtual_network_subnet_id = 32 [json_name = "virtual_network_subnet_id"];

  bool webdeploy_publish_basic_authentication_enabled = 33 [
    json_name = "webdeploy_publish_basic_authentication_enabled"
  ];

  AuthSettings auth_settings = 34 [json_name = "auth_settings"];

  AuthSettingsV2 auth_settings_v2 = 35 [json_name = "auth_settings_v2"];

  Backup backup = 36;

  repeated ConnectionString connection_string = 37 [json_name = "connection_string"];

  Identity identity = 38;

  SiteConfig site_config = 39 [json_name = "site_config"];

  repeated StorageAccount storage_account = 40 [json_name = "storage_account"];

  repeated Timeouts timeouts = 41;

  google.protobuf.Value for_each = 42 [json_name = "for_each"];

  repeated string depends_on = 43 [json_name = "depends_on"];

  int32 count = 44;

  string provider = 45;

  terraform.v1.Lifecycle lifecycle = 46;

  message SiteCredential {
    // name: string
    string name = 1;

    // password: string
    string password = 2;
  }

  message AuthSettings {
    // Specifies a map of Login Parameters to send to the OpenID Connect authorization
    // endpoint when a user logs in.
    map<string, string> additional_login_parameters = 1 [json_name = "additional_login_parameters"];

    // Specifies a list of External URLs that can be redirected to as part of logging in
    // or logging out of the Windows Web App.
    repeated string allowed_external_redirect_urls = 2 [json_name = "allowed_external_redirect_urls"];

    // The default authentication provider to use when multiple providers are
    // configured. Possible values include: `AzureActiveDirectory`, `Facebook`,
    // `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
    string default_provider = 3 [json_name = "default_provider"];

    // Should the Authentication / Authorization feature be enabled?
    bool enabled = 4;

    // The OpenID Connect Issuer URI that represents the entity which issues access
    // tokens.
    string issuer = 5;

    // The RuntimeVersion of the Authentication / Authorization feature in use.
    string runtime_version = 6 [json_name = "runtime_version"];

    // The number of hours after session token expiration that a session token can be
    // used to call the token refresh API. Defaults to `72` hours.
    int64 token_refresh_extension_hours = 7 [json_name = "token_refresh_extension_hours"];

    // Should the Windows Web App durably store platform-specific security tokens that
    // are obtained during login flows? Defaults to `false`.
    bool token_store_enabled = 8 [json_name = "token_store_enabled"];

    // The action to take when an unauthenticated client attempts to access the app.
    // Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
    string unauthenticated_client_action = 9 [json_name = "unauthenticated_client_action"];

    ActiveDirectory active_directory = 10 [json_name = "active_directory"];

    Facebook facebook = 11;

    Github github = 12;

    Google google = 13;

    Microsoft microsoft = 14;

    Twitter twitter = 15;

    message ActiveDirectory {
      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 2 [json_name = "client_id"];

      // The Client Secret for the Client ID. Cannot be used with
      // `client_secret_setting_name`.
      string client_secret = 3 [json_name = "client_secret"];

      // The App Setting name that contains the client secret of the Client. Cannot be
      // used with `client_secret`.
      string client_secret_setting_name = 4 [json_name = "client_secret_setting_name"];
    }

    message Facebook {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The App Secret of the Facebook app used for Facebook Login. Cannot be specified
      // with `app_secret_setting_name`.
      string app_secret = 2 [json_name = "app_secret"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login. Cannot be specified with `app_secret`.
      string app_secret_setting_name = 3 [json_name = "app_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login
      // authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Github {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The Client Secret of the GitHub app used for GitHub Login. Cannot be specified
      // with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Google {
      // The OpenID Connect Client ID for the Google web application.
      string client_id = 1 [json_name = "client_id"];

      // The client secret associated with the Google web application.  Cannot be
      // specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of Google
      // Sign-In authentication. If not specified, "openid", "profile", and "email" are
      // used as default scopes.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Microsoft {
      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 1 [json_name = "client_id"];

      // The OAuth 2.0 client secret that was created for the app used for authentication.
      // Cannot be specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account
      // authentication. If not specified, `wl.basic` is used as the default scope.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Twitter {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
      // Cannot be specified with `consumer_secret_setting_name`.
      string consumer_secret = 2 [json_name = "consumer_secret"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in. Cannot be specified with `consumer_secret`.
      string consumer_secret_setting_name = 3 [json_name = "consumer_secret_setting_name"];
    }
  }

  message AuthSettingsV2 {
    // Should the AuthV2 Settings be enabled. Defaults to `false`
    bool auth_enabled = 1 [json_name = "auth_enabled"];

    // The path to the App Auth settings. **Note:** Relative Paths are evaluated from
    // the Site Root directory.
    string config_file_path = 2 [json_name = "config_file_path"];

    // The Default Authentication Provider to use when the `unauthenticated_action` is
    // set to `RedirectToLoginPage`. Possible values include: `apple`,
    // `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name`
    // of your `custom_oidc_v2` provider.
    string default_provider = 3 [json_name = "default_provider"];

    // The paths which should be excluded from the `unauthenticated_action` when it is
    // set to `RedirectToLoginPage`.
    repeated string excluded_paths = 4 [json_name = "excluded_paths"];

    // The convention used to determine the url of the request made. Possible values
    // include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`,
    // `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
    string forward_proxy_convention = 5 [json_name = "forward_proxy_convention"];

    // The name of the header containing the host of the request.
    string forward_proxy_custom_host_header_name = 6 [
      json_name = "forward_proxy_custom_host_header_name"
    ];

    // The name of the header containing the scheme of the request.
    string forward_proxy_custom_scheme_header_name = 7 [
      json_name = "forward_proxy_custom_scheme_header_name"
    ];

    // The prefix that should precede all the authentication and authorisation paths.
    // Defaults to `/.auth`
    string http_route_api_prefix = 8 [json_name = "http_route_api_prefix"];

    // Should the authentication flow be used for all requests.
    bool require_authentication = 9 [json_name = "require_authentication"];

    // Should HTTPS be required on connections? Defaults to true.
    bool require_https = 10 [json_name = "require_https"];

    // The Runtime Version of the Authentication and Authorisation feature of this App.
    // Defaults to `~1`
    string runtime_version = 11 [json_name = "runtime_version"];

    // The action to take for requests made without authentication. Possible values
    // include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`.
    // Defaults to `RedirectToLoginPage`.
    string unauthenticated_action = 12 [json_name = "unauthenticated_action"];

    ActiveDirectoryV2 active_directory_v2 = 13 [json_name = "active_directory_v2"];

    AppleV2 apple_v2 = 14 [json_name = "apple_v2"];

    AzureStaticWebAppV2 azure_static_web_app_v2 = 15 [json_name = "azure_static_web_app_v2"];

    repeated CustomOidcV2 custom_oidc_v2 = 16 [json_name = "custom_oidc_v2"];

    FacebookV2 facebook_v2 = 17 [json_name = "facebook_v2"];

    GithubV2 github_v2 = 18 [json_name = "github_v2"];

    GoogleV2 google_v2 = 19 [json_name = "google_v2"];

    Login login = 20;

    MicrosoftV2 microsoft_v2 = 21 [json_name = "microsoft_v2"];

    TwitterV2 twitter_v2 = 22 [json_name = "twitter_v2"];

    message ActiveDirectoryV2 {
      // The list of allowed Applications for the Default Authorisation Policy.
      repeated string allowed_applications = 1 [json_name = "allowed_applications"];

      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 2 [json_name = "allowed_audiences"];

      // The list of allowed Group Names for the Default Authorisation Policy.
      repeated string allowed_groups = 3 [json_name = "allowed_groups"];

      // The list of allowed Identities for the Default Authorisation Policy.
      repeated string allowed_identities = 4 [json_name = "allowed_identities"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 5 [json_name = "client_id"];

      // The thumbprint of the certificate used for signing purposes.
      string client_secret_certificate_thumbprint = 6 [json_name = "client_secret_certificate_thumbprint"];

      // The App Setting name that contains the client secret of the Client.
      string client_secret_setting_name = 7 [json_name = "client_secret_setting_name"];

      // A list of Allowed Client Applications in the JWT Claim.
      repeated string jwt_allowed_client_applications = 8 [json_name = "jwt_allowed_client_applications"];

      // A list of Allowed Groups in the JWT Claim.
      repeated string jwt_allowed_groups = 9 [json_name = "jwt_allowed_groups"];

      // A map of key-value pairs to send to the Authorisation Endpoint when a user logs
      // in.
      map<string, string> login_parameters = 10 [json_name = "login_parameters"];

      // The Azure Tenant Endpoint for the Authenticating Tenant. e.g.
      // `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
      string tenant_auth_endpoint = 11 [json_name = "tenant_auth_endpoint"];

      // Should the www-authenticate provider should be omitted from the request? Defaults
      // to `false`
      bool www_authentication_disabled = 12 [json_name = "www_authentication_disabled"];
    }

    message AppleV2 {
      // The OpenID Connect Client ID for the Apple web application.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Apple
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message AzureStaticWebAppV2 {
      // The ID of the Client to use to authenticate with Azure Static Web App
      // Authentication.
      string client_id = 1 [json_name = "client_id"];
    }

    message CustomOidcV2 {
      // The endpoint to make the Authorisation Request.
      string authorisation_endpoint = 1 [json_name = "authorisation_endpoint"];

      // The endpoint that provides the keys necessary to validate the token.
      string certification_uri = 2 [json_name = "certification_uri"];

      // The Client Credential Method used. Currently the only supported value is
      // `ClientSecretPost`.
      string client_credential_method = 3 [json_name = "client_credential_method"];

      // The ID of the Client to use to authenticate with this Custom OIDC.
      string client_id = 4 [json_name = "client_id"];

      // The App Setting name that contains the secret for this Custom OIDC Client.
      string client_secret_setting_name = 5 [json_name = "client_secret_setting_name"];

      // The endpoint that issued the Token.
      string issuer_endpoint = 6 [json_name = "issuer_endpoint"];

      // The name of the Custom OIDC Authentication Provider.
      string name = 7;

      // The name of the claim that contains the users name.
      string name_claim_type = 8 [json_name = "name_claim_type"];

      // The endpoint that contains all the configuration endpoints for this Custom OIDC
      // provider.
      string openid_configuration_endpoint = 9 [json_name = "openid_configuration_endpoint"];

      // The list of the scopes that should be requested while authenticating.
      repeated string scopes = 10;

      // The endpoint used to request a Token.
      string token_endpoint = 11 [json_name = "token_endpoint"];
    }

    message FacebookV2 {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login.
      string app_secret_setting_name = 2 [json_name = "app_secret_setting_name"];

      // The version of the Facebook API to be used while logging in.
      string graph_api_version = 3 [json_name = "graph_api_version"];

      // Specifies a list of scopes to be requested as part of Facebook Login
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message GithubV2 {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message GoogleV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Google
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OpenID Connect Client ID for the Google web application.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of Login scopes that will be requested as part of Google Sign-In
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message Login {
      // External URLs that can be redirected to as part of logging in or logging out of
      // the app. This is an advanced setting typically only needed by Windows Store
      // application backends. **Note:** URLs within the current domain are always
      // implicitly allowed.
      repeated string allowed_external_redirect_urls = 1 [json_name = "allowed_external_redirect_urls"];

      // The method by which cookies expire. Possible values include: `FixedTime`, and
      // `IdentityProviderDerived`. Defaults to `FixedTime`.
      string cookie_expiration_convention = 2 [json_name = "cookie_expiration_convention"];

      // The time after the request is made when the session cookie should expire.
      // Defaults to `08:00:00`.
      string cookie_expiration_time = 3 [json_name = "cookie_expiration_time"];

      // The endpoint to which logout requests should be made.
      string logout_endpoint = 4 [json_name = "logout_endpoint"];

      // The time after the request is made when the nonce should expire. Defaults to
      // `00:05:00`.
      string nonce_expiration_time = 5 [json_name = "nonce_expiration_time"];

      // Should the fragments from the request be preserved after the login request is
      // made. Defaults to `false`.
      bool preserve_url_fragments_for_logins = 6 [json_name = "preserve_url_fragments_for_logins"];

      // The number of hours after session token expiration that a session token can be
      // used to call the token refresh API. Defaults to `72` hours.
      int64 token_refresh_extension_time = 7 [json_name = "token_refresh_extension_time"];

      // Should the Token Store configuration Enabled. Defaults to `false`
      bool token_store_enabled = 8 [json_name = "token_store_enabled"];

      // The directory path in the App Filesystem in which the tokens will be stored.
      string token_store_path = 9 [json_name = "token_store_path"];

      // The name of the app setting which contains the SAS URL of the blob storage
      // containing the tokens.
      string token_store_sas_setting_name = 10 [json_name = "token_store_sas_setting_name"];

      // Should the nonce be validated while completing the login flow. Defaults to
      // `true`.
      bool validate_nonce = 11 [json_name = "validate_nonce"];
    }

    message MicrosoftV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Microsoft
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of Login scopes that will be requested as part of Microsoft Account
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message TwitterV2 {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in.
      string consumer_secret_setting_name = 2 [json_name = "consumer_secret_setting_name"];
    }
  }

  message Backup {
    // Should this backup job be enabled?
    bool enabled = 1;

    // The name which should be used for this Backup.
    string name = 2;

    // The SAS URL to the container.
    string storage_account_url = 3 [json_name = "storage_account_url"];

    Schedule schedule = 4;

    message Schedule {
      // How often the backup should be executed (e.g. for weekly backup, this should be
      // set to `7` and `frequency_unit` should be set to `Day`).
      int64 frequency_interval = 1 [json_name = "frequency_interval"];

      // The unit of time for how often the backup should take place. Possible values
      // include: `Day` and `Hour`.
      string frequency_unit = 2 [json_name = "frequency_unit"];

      // Should the service keep at least one backup, regardless of age of backup.
      // Defaults to `false`.
      bool keep_at_least_one_backup = 3 [json_name = "keep_at_least_one_backup"];

      // The time the backup was last attempted.
      string last_execution_time = 4 [json_name = "last_execution_time"];

      // After how many days backups should be deleted.
      int64 retention_period_days = 5 [json_name = "retention_period_days"];

      // When the schedule should start working in RFC-3339 format.
      string start_time = 6 [json_name = "start_time"];
    }
  }

  message ConnectionString {
    // The name which should be used for this Connection.
    string name = 1;

    // Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`,
    // `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`,
    // `RedisCache`, and `PostgreSQL`.
    string type = 2;

    // The connection string value.
    string value = 3;
  }

  message Identity {
    repeated string identity_ids = 1 [json_name = "identity_ids"];

    string principal_id = 2 [json_name = "principal_id"];

    string tenant_id = 3 [json_name = "tenant_id"];

    string type = 4;
  }

  message SiteConfig {
    // If this Windows Web App is Always On enabled. Defaults to `false`.
    bool always_on = 1 [json_name = "always_on"];

    // The URL of the API definition that describes this Windows Function App.
    string api_definition_url = 2 [json_name = "api_definition_url"];

    // The ID of the API Management API for this Windows Function App.
    string api_management_api_id = 3 [json_name = "api_management_api_id"];

    // The program and any arguments used to launch this app via the command line.
    // (Example `node myapp.js`).
    string app_command_line = 4 [json_name = "app_command_line"];

    // The number of workers this function app can scale out to. Only applicable to apps
    // on the Consumption and Premium plan.
    int64 app_scale_limit = 5 [json_name = "app_scale_limit"];

    // The Connection String for linking the Windows Function App to Application
    // Insights.
    string application_insights_connection_string = 6 [
      json_name = "application_insights_connection_string"
    ];

    // The Instrumentation Key for connecting the Windows Function App to Application
    // Insights.
    string application_insights_key = 7 [json_name = "application_insights_key"];

    string auto_swap_slot_name = 8 [json_name = "auto_swap_slot_name"];

    // Specifies a list of Default Documents for the Windows Web App.
    repeated string default_documents = 9 [json_name = "default_documents"];

    // Is detailed error logging enabled
    bool detailed_error_logging_enabled = 10 [json_name = "detailed_error_logging_enabled"];

    // The number of minimum instances for this Windows Function App. Only affects apps
    // on Elastic Premium plans.
    int64 elastic_instance_minimum = 11 [json_name = "elastic_instance_minimum"];

    // State of FTP / FTPS service for this function app. Possible values include:
    // `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
    string ftps_state = 12 [json_name = "ftps_state"];

    // The amount of time in minutes that a node is unhealthy before being removed from
    // the load balancer. Possible values are between `2` and `10`. Defaults to `10`.
    // Only valid in conjunction with `health_check_path`
    int64 health_check_eviction_time_in_min = 13 [json_name = "health_check_eviction_time_in_min"];

    // The path to be checked for this function app health.
    string health_check_path = 14 [json_name = "health_check_path"];

    // Specifies if the http2 protocol should be enabled. Defaults to `false`.
    bool http2_enabled = 15 [json_name = "http2_enabled"];

    string ip_restriction_default_action = 16 [json_name = "ip_restriction_default_action"];

    // The Site load balancing mode. Possible values include: `WeightedRoundRobin`,
    // `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`,
    // `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
    string load_balancing_mode = 17 [json_name = "load_balancing_mode"];

    // The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`.
    // Defaults to `Integrated`.
    string managed_pipeline_mode = 18 [json_name = "managed_pipeline_mode"];

    // The configures the minimum version of TLS required for SSL requests. Possible
    // values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
    string minimum_tls_version = 19 [json_name = "minimum_tls_version"];

    // The number of pre-warmed instances for this function app. Only affects apps on an
    // Elastic Premium plan.
    int64 pre_warmed_instance_count = 20 [json_name = "pre_warmed_instance_count"];

    // Should Remote Debugging be enabled. Defaults to `false`.
    bool remote_debugging_enabled = 21 [json_name = "remote_debugging_enabled"];

    // The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and
    // `VS2022`
    string remote_debugging_version = 22 [json_name = "remote_debugging_version"];

    // Should Functions Runtime Scale Monitoring be enabled.
    bool runtime_scale_monitoring_enabled = 23 [json_name = "runtime_scale_monitoring_enabled"];

    string scm_ip_restriction_default_action = 24 [json_name = "scm_ip_restriction_default_action"];

    // Configures the minimum version of TLS required for SSL requests to the SCM site
    // Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
    string scm_minimum_tls_version = 25 [json_name = "scm_minimum_tls_version"];

    // The SCM Type in use by the Windows Function App.
    string scm_type = 26 [json_name = "scm_type"];

    // Should the Windows Function App `ip_restriction` configuration be used for the
    // SCM also.
    bool scm_use_main_ip_restriction = 27 [json_name = "scm_use_main_ip_restriction"];

    // Should the Windows Web App use a 32-bit worker.
    bool use_32_bit_worker = 28 [json_name = "use_32_bit_worker"];

    // Should all outbound traffic to have Virtual Network Security Groups and User
    // Defined Routes applied? Defaults to `false`.
    bool vnet_route_all_enabled = 29 [json_name = "vnet_route_all_enabled"];

    // Should Web Sockets be enabled. Defaults to `false`.
    bool websockets_enabled = 30 [json_name = "websockets_enabled"];

    // The Windows FX Version string.
    string windows_fx_version = 31 [json_name = "windows_fx_version"];

    // The number of Workers for this Windows Function App.
    int64 worker_count = 32 [json_name = "worker_count"];

    AppServiceLogs app_service_logs = 33 [json_name = "app_service_logs"];

    ApplicationStack application_stack = 34 [json_name = "application_stack"];

    Cors cors = 35;

    repeated IpRestriction ip_restriction = 36 [json_name = "ip_restriction"];

    repeated ScmIpRestriction scm_ip_restriction = 37 [json_name = "scm_ip_restriction"];

    message AppServiceLogs {
      // The amount of disk space to use for logs. Valid values are between `25` and
      // `100`.
      int64 disk_quota_mb = 1 [json_name = "disk_quota_mb"];

      // The retention period for logs in days. Valid values are between `0` and `99999`.
      // Defaults to `0` (never delete).
      int64 retention_period_days = 2 [json_name = "retention_period_days"];
    }

    message ApplicationStack {
      // The version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0` and `v7.0`
      string dotnet_version = 1 [json_name = "dotnet_version"];

      // The version of Java to use. Possible values are `1.8`, `11` and `17`
      string java_version = 2 [json_name = "java_version"];

      // The version of Node to use. Possible values include `12`, `14`, `16` and `18`
      string node_version = 3 [json_name = "node_version"];

      // The PowerShell Core version to use. Possible values are `7`, and `7.2`
      string powershell_core_version = 4 [json_name = "powershell_core_version"];

      // Does the Function App use a custom Application Stack?
      bool use_custom_runtime = 5 [json_name = "use_custom_runtime"];

      // Should the DotNet process use an isolated runtime. Defaults to `false`.
      bool use_dotnet_isolated_runtime = 6 [json_name = "use_dotnet_isolated_runtime"];
    }

    message Cors {
      // Specifies a list of origins that should be allowed to make cross-origin calls.
      repeated string allowed_origins = 1 [json_name = "allowed_origins"];

      // Are credentials allowed in CORS requests? Defaults to `false`.
      bool support_credentials = 2 [json_name = "support_credentials"];
    }

    message IpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }

    message ScmIpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }
  }

  message StorageAccount {
    string access_key = 1 [json_name = "access_key"];

    string account_name = 2 [json_name = "account_name"];

    string mount_path = 3 [json_name = "mount_path"];

    string name = 4;

    string share_name = 5 [json_name = "share_name"];

    string type = 6;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string read = 3;

    string update = 4;
  }
}

// AzurermWindowsVirtualMachine version is 0
message AzurermWindowsVirtualMachine {
  string admin_password = 1 [json_name = "admin_password"];

  string admin_username = 2 [json_name = "admin_username"];

  bool allow_extension_operations = 3 [json_name = "allow_extension_operations"];

  string availability_set_id = 4 [json_name = "availability_set_id"];

  bool bypass_platform_safety_checks_on_user_schedule_enabled = 5 [
    json_name = "bypass_platform_safety_checks_on_user_schedule_enabled"
  ];

  string capacity_reservation_group_id = 6 [json_name = "capacity_reservation_group_id"];

  string computer_name = 7 [json_name = "computer_name"];

  string custom_data = 8 [json_name = "custom_data"];

  string dedicated_host_group_id = 9 [json_name = "dedicated_host_group_id"];

  string dedicated_host_id = 10 [json_name = "dedicated_host_id"];

  string disk_controller_type = 11 [json_name = "disk_controller_type"];

  string edge_zone = 12 [json_name = "edge_zone"];

  bool enable_automatic_updates = 13 [json_name = "enable_automatic_updates"];

  bool encryption_at_host_enabled = 14 [json_name = "encryption_at_host_enabled"];

  string eviction_policy = 15 [json_name = "eviction_policy"];

  string extensions_time_budget = 16 [json_name = "extensions_time_budget"];

  bool hotpatching_enabled = 17 [json_name = "hotpatching_enabled"];

  string id = 18;

  string license_type = 19 [json_name = "license_type"];

  string location = 20;

  int64 max_bid_price = 21 [json_name = "max_bid_price"];

  string name = 22;

  repeated string network_interface_ids = 23 [json_name = "network_interface_ids"];

  string patch_assessment_mode = 24 [json_name = "patch_assessment_mode"];

  string patch_mode = 25 [json_name = "patch_mode"];

  int64 platform_fault_domain = 26 [json_name = "platform_fault_domain"];

  string priority = 27;

  string private_ip_address = 28 [json_name = "private_ip_address"];

  repeated string private_ip_addresses = 29 [json_name = "private_ip_addresses"];

  bool provision_vm_agent = 30 [json_name = "provision_vm_agent"];

  string proximity_placement_group_id = 31 [json_name = "proximity_placement_group_id"];

  string public_ip_address = 32 [json_name = "public_ip_address"];

  repeated string public_ip_addresses = 33 [json_name = "public_ip_addresses"];

  string reboot_setting = 34 [json_name = "reboot_setting"];

  string resource_group_name = 35 [json_name = "resource_group_name"];

  bool secure_boot_enabled = 36 [json_name = "secure_boot_enabled"];

  string size = 37;

  string source_image_id = 38 [json_name = "source_image_id"];

  map<string, string> tags = 39;

  string timezone = 40;

  string user_data = 41 [json_name = "user_data"];

  string virtual_machine_id = 42 [json_name = "virtual_machine_id"];

  string virtual_machine_scale_set_id = 43 [json_name = "virtual_machine_scale_set_id"];

  bool vm_agent_platform_updates_enabled = 44 [json_name = "vm_agent_platform_updates_enabled"];

  bool vtpm_enabled = 45 [json_name = "vtpm_enabled"];

  string zone = 46;

  AdditionalCapabilities additional_capabilities = 47 [json_name = "additional_capabilities"];

  repeated AdditionalUnattendContent additional_unattend_content = 48 [json_name = "additional_unattend_content"];

  BootDiagnostics boot_diagnostics = 49 [json_name = "boot_diagnostics"];

  repeated GalleryApplication gallery_application = 50 [json_name = "gallery_application"];

  Identity identity = 51;

  OsDisk os_disk = 52 [json_name = "os_disk"];

  OsImageNotification os_image_notification = 53 [json_name = "os_image_notification"];

  Plan plan = 54;

  repeated Secret secret = 55;

  SourceImageReference source_image_reference = 56 [json_name = "source_image_reference"];

  TerminationNotification termination_notification = 57 [json_name = "termination_notification"];

  repeated Timeouts timeouts = 58;

  repeated WinrmListener winrm_listener = 59 [json_name = "winrm_listener"];

  google.protobuf.Value for_each = 60 [json_name = "for_each"];

  repeated string depends_on = 61 [json_name = "depends_on"];

  int32 count = 62;

  string provider = 63;

  terraform.v1.Lifecycle lifecycle = 64;

  message AdditionalCapabilities {
    bool ultra_ssd_enabled = 1 [json_name = "ultra_ssd_enabled"];
  }

  message AdditionalUnattendContent {
    string content = 1;

    string setting = 2;
  }

  message BootDiagnostics {
    string storage_account_uri = 1 [json_name = "storage_account_uri"];
  }

  message GalleryApplication {
    bool automatic_upgrade_enabled = 1 [json_name = "automatic_upgrade_enabled"];

    string configuration_blob_uri = 2 [json_name = "configuration_blob_uri"];

    int64 order = 3;

    string tag = 4;

    bool treat_failure_as_deployment_failure_enabled = 5 [
      json_name = "treat_failure_as_deployment_failure_enabled"
    ];

    string version_id = 6 [json_name = "version_id"];
  }

  message Identity {
    repeated string identity_ids = 1 [json_name = "identity_ids"];

    string principal_id = 2 [json_name = "principal_id"];

    string tenant_id = 3 [json_name = "tenant_id"];

    string type = 4;
  }

  message OsDisk {
    string caching = 1;

    string disk_encryption_set_id = 2 [json_name = "disk_encryption_set_id"];

    int64 disk_size_gb = 3 [json_name = "disk_size_gb"];

    string name = 4;

    string secure_vm_disk_encryption_set_id = 5 [json_name = "secure_vm_disk_encryption_set_id"];

    string security_encryption_type = 6 [json_name = "security_encryption_type"];

    string storage_account_type = 7 [json_name = "storage_account_type"];

    bool write_accelerator_enabled = 8 [json_name = "write_accelerator_enabled"];

    DiffDiskSettings diff_disk_settings = 9 [json_name = "diff_disk_settings"];

    message DiffDiskSettings {
      string option = 1;

      string placement = 2;
    }
  }

  message OsImageNotification {
    string timeout = 1;
  }

  message Plan {
    string name = 1;

    string product = 2;

    string publisher = 3;
  }

  message Secret {
    string key_vault_id = 1 [json_name = "key_vault_id"];

    repeated Certificate certificate = 2;

    message Certificate {
      string store = 1;

      string url = 2;
    }
  }

  message SourceImageReference {
    string offer = 1;

    string publisher = 2;

    string sku = 3;

    string version = 4;
  }

  message TerminationNotification {
    bool enabled = 1;

    string timeout = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string read = 3;

    string update = 4;
  }

  message WinrmListener {
    string certificate_url = 1 [json_name = "certificate_url"];

    string protocol = 2;
  }
}

// AzurermWindowsVirtualMachineScaleSet version is 0
message AzurermWindowsVirtualMachineScaleSet {
  string admin_password = 1 [json_name = "admin_password"];

  string admin_username = 2 [json_name = "admin_username"];

  string capacity_reservation_group_id = 3 [json_name = "capacity_reservation_group_id"];

  string computer_name_prefix = 4 [json_name = "computer_name_prefix"];

  string custom_data = 5 [json_name = "custom_data"];

  bool do_not_run_extensions_on_overprovisioned_machines = 6 [
    json_name = "do_not_run_extensions_on_overprovisioned_machines"
  ];

  string edge_zone = 7 [json_name = "edge_zone"];

  bool enable_automatic_updates = 8 [json_name = "enable_automatic_updates"];

  bool encryption_at_host_enabled = 9 [json_name = "encryption_at_host_enabled"];

  string eviction_policy = 10 [json_name = "eviction_policy"];

  bool extension_operations_enabled = 11 [json_name = "extension_operations_enabled"];

  string extensions_time_budget = 12 [json_name = "extensions_time_budget"];

  string health_probe_id = 13 [json_name = "health_probe_id"];

  string host_group_id = 14 [json_name = "host_group_id"];

  string id = 15;

  int64 instances = 16;

  string license_type = 17 [json_name = "license_type"];

  string location = 18;

  int64 max_bid_price = 19 [json_name = "max_bid_price"];

  string name = 20;

  bool overprovision = 21;

  int64 platform_fault_domain_count = 22 [json_name = "platform_fault_domain_count"];

  string priority = 23;

  bool provision_vm_agent = 24 [json_name = "provision_vm_agent"];

  string proximity_placement_group_id = 25 [json_name = "proximity_placement_group_id"];

  string resource_group_name = 26 [json_name = "resource_group_name"];

  string scale_in_policy = 27 [json_name = "scale_in_policy"];

  bool secure_boot_enabled = 28 [json_name = "secure_boot_enabled"];

  bool single_placement_group = 29 [json_name = "single_placement_group"];

  string sku = 30;

  string source_image_id = 31 [json_name = "source_image_id"];

  map<string, string> tags = 32;

  string timezone = 33;

  string unique_id = 34 [json_name = "unique_id"];

  string upgrade_mode = 35 [json_name = "upgrade_mode"];

  string user_data = 36 [json_name = "user_data"];

  bool vtpm_enabled = 37 [json_name = "vtpm_enabled"];

  bool zone_balance = 38 [json_name = "zone_balance"];

  repeated string zones = 39;

  AdditionalCapabilities additional_capabilities = 40 [json_name = "additional_capabilities"];

  repeated AdditionalUnattendContent additional_unattend_content = 41 [json_name = "additional_unattend_content"];

  AutomaticInstanceRepair automatic_instance_repair = 42 [json_name = "automatic_instance_repair"];

  AutomaticOsUpgradePolicy automatic_os_upgrade_policy = 43 [json_name = "automatic_os_upgrade_policy"];

  BootDiagnostics boot_diagnostics = 44 [json_name = "boot_diagnostics"];

  repeated DataDisk data_disk = 45 [json_name = "data_disk"];

  repeated Extension extension = 46;

  repeated GalleryApplication gallery_application = 47 [json_name = "gallery_application"];

  repeated GalleryApplications gallery_applications = 48 [json_name = "gallery_applications"];

  Identity identity = 49;

  repeated NetworkInterface network_interface = 50 [json_name = "network_interface"];

  OsDisk os_disk = 51 [json_name = "os_disk"];

  Plan plan = 52;

  RollingUpgradePolicy rolling_upgrade_policy = 53 [json_name = "rolling_upgrade_policy"];

  ScaleIn scale_in = 54 [json_name = "scale_in"];

  repeated Secret secret = 55;

  SourceImageReference source_image_reference = 56 [json_name = "source_image_reference"];

  SpotRestore spot_restore = 57 [json_name = "spot_restore"];

  TerminateNotification terminate_notification = 58 [json_name = "terminate_notification"];

  TerminationNotification termination_notification = 59 [json_name = "termination_notification"];

  repeated Timeouts timeouts = 60;

  repeated WinrmListener winrm_listener = 61 [json_name = "winrm_listener"];

  google.protobuf.Value for_each = 62 [json_name = "for_each"];

  repeated string depends_on = 63 [json_name = "depends_on"];

  int32 count = 64;

  string provider = 65;

  terraform.v1.Lifecycle lifecycle = 66;

  message AdditionalCapabilities {
    bool ultra_ssd_enabled = 1 [json_name = "ultra_ssd_enabled"];
  }

  message AdditionalUnattendContent {
    string content = 1;

    string setting = 2;
  }

  message AutomaticInstanceRepair {
    bool enabled = 1;

    string grace_period = 2 [json_name = "grace_period"];
  }

  message AutomaticOsUpgradePolicy {
    bool disable_automatic_rollback = 1 [json_name = "disable_automatic_rollback"];

    bool enable_automatic_os_upgrade = 2 [json_name = "enable_automatic_os_upgrade"];
  }

  message BootDiagnostics {
    string storage_account_uri = 1 [json_name = "storage_account_uri"];
  }

  message DataDisk {
    string caching = 1;

    string create_option = 2 [json_name = "create_option"];

    string disk_encryption_set_id = 3 [json_name = "disk_encryption_set_id"];

    int64 disk_size_gb = 4 [json_name = "disk_size_gb"];

    int64 lun = 5;

    string name = 6;

    string storage_account_type = 7 [json_name = "storage_account_type"];

    int64 ultra_ssd_disk_iops_read_write = 8 [json_name = "ultra_ssd_disk_iops_read_write"];

    int64 ultra_ssd_disk_mbps_read_write = 9 [json_name = "ultra_ssd_disk_mbps_read_write"];

    bool write_accelerator_enabled = 10 [json_name = "write_accelerator_enabled"];
  }

  message Extension {
    bool auto_upgrade_minor_version = 1 [json_name = "auto_upgrade_minor_version"];

    bool automatic_upgrade_enabled = 2 [json_name = "automatic_upgrade_enabled"];

    string force_update_tag = 3 [json_name = "force_update_tag"];

    string name = 4;

    string protected_settings = 5 [json_name = "protected_settings"];

    repeated string provision_after_extensions = 6 [json_name = "provision_after_extensions"];

    string publisher = 7;

    string settings = 8;

    string type = 9;

    string type_handler_version = 10 [json_name = "type_handler_version"];

    ProtectedSettingsFromKeyVault protected_settings_from_key_vault = 11 [json_name = "protected_settings_from_key_vault"];

    message ProtectedSettingsFromKeyVault {
      string secret_url = 1 [json_name = "secret_url"];

      string source_vault_id = 2 [json_name = "source_vault_id"];
    }
  }

  message GalleryApplication {
    string configuration_blob_uri = 1 [json_name = "configuration_blob_uri"];

    int64 order = 2;

    string tag = 3;

    string version_id = 4 [json_name = "version_id"];
  }

  message GalleryApplications {
    string configuration_reference_blob_uri = 1 [json_name = "configuration_reference_blob_uri"];

    int64 order = 2;

    string package_reference_id = 3 [json_name = "package_reference_id"];

    string tag = 4;
  }

  message Identity {
    repeated string identity_ids = 1 [json_name = "identity_ids"];

    string principal_id = 2 [json_name = "principal_id"];

    string tenant_id = 3 [json_name = "tenant_id"];

    string type = 4;
  }

  message NetworkInterface {
    repeated string dns_servers = 1 [json_name = "dns_servers"];

    bool enable_accelerated_networking = 2 [json_name = "enable_accelerated_networking"];

    bool enable_ip_forwarding = 3 [json_name = "enable_ip_forwarding"];

    string name = 4;

    string network_security_group_id = 5 [json_name = "network_security_group_id"];

    bool primary = 6;

    repeated IpConfiguration ip_configuration = 7 [json_name = "ip_configuration"];

    message IpConfiguration {
      repeated string application_gateway_backend_address_pool_ids = 1 [
        json_name = "application_gateway_backend_address_pool_ids"
      ];

      repeated string application_security_group_ids = 2 [json_name = "application_security_group_ids"];

      repeated string load_balancer_backend_address_pool_ids = 3 [
        json_name = "load_balancer_backend_address_pool_ids"
      ];

      repeated string load_balancer_inbound_nat_rules_ids = 4 [json_name = "load_balancer_inbound_nat_rules_ids"];

      string name = 5;

      bool primary = 6;

      string subnet_id = 7 [json_name = "subnet_id"];

      string version = 8;

      repeated PublicIpAddress public_ip_address = 9 [json_name = "public_ip_address"];

      message PublicIpAddress {
        string domain_name_label = 1 [json_name = "domain_name_label"];

        int64 idle_timeout_in_minutes = 2 [json_name = "idle_timeout_in_minutes"];

        string name = 3;

        string public_ip_prefix_id = 4 [json_name = "public_ip_prefix_id"];

        string version = 5;

        repeated IpTag ip_tag = 6 [json_name = "ip_tag"];

        message IpTag {
          string tag = 1;

          string type = 2;
        }
      }
    }
  }

  message OsDisk {
    string caching = 1;

    string disk_encryption_set_id = 2 [json_name = "disk_encryption_set_id"];

    int64 disk_size_gb = 3 [json_name = "disk_size_gb"];

    string secure_vm_disk_encryption_set_id = 4 [json_name = "secure_vm_disk_encryption_set_id"];

    string security_encryption_type = 5 [json_name = "security_encryption_type"];

    string storage_account_type = 6 [json_name = "storage_account_type"];

    bool write_accelerator_enabled = 7 [json_name = "write_accelerator_enabled"];

    DiffDiskSettings diff_disk_settings = 8 [json_name = "diff_disk_settings"];

    message DiffDiskSettings {
      string option = 1;

      string placement = 2;
    }
  }

  message Plan {
    string name = 1;

    string product = 2;

    string publisher = 3;
  }

  message RollingUpgradePolicy {
    bool cross_zone_upgrades_enabled = 1 [json_name = "cross_zone_upgrades_enabled"];

    int64 max_batch_instance_percent = 2 [json_name = "max_batch_instance_percent"];

    int64 max_unhealthy_instance_percent = 3 [json_name = "max_unhealthy_instance_percent"];

    int64 max_unhealthy_upgraded_instance_percent = 4 [
      json_name = "max_unhealthy_upgraded_instance_percent"
    ];

    string pause_time_between_batches = 5 [json_name = "pause_time_between_batches"];

    bool prioritize_unhealthy_instances_enabled = 6 [
      json_name = "prioritize_unhealthy_instances_enabled"
    ];
  }

  message ScaleIn {
    bool force_deletion_enabled = 1 [json_name = "force_deletion_enabled"];

    string rule = 2;
  }

  message Secret {
    string key_vault_id = 1 [json_name = "key_vault_id"];

    repeated Certificate certificate = 2;

    message Certificate {
      string store = 1;

      string url = 2;
    }
  }

  message SourceImageReference {
    string offer = 1;

    string publisher = 2;

    string sku = 3;

    string version = 4;
  }

  message SpotRestore {
    bool enabled = 1;

    string timeout = 2;
  }

  message TerminateNotification {
    bool enabled = 1;

    string timeout = 2;
  }

  message TerminationNotification {
    bool enabled = 1;

    string timeout = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string read = 3;

    string update = 4;
  }

  message WinrmListener {
    string certificate_url = 1 [json_name = "certificate_url"];

    string protocol = 2;
  }
}

// AzurermWindowsWebApp version is 1
message AzurermWindowsWebApp {
  map<string, string> app_settings = 1 [json_name = "app_settings"];

  bool client_affinity_enabled = 2 [json_name = "client_affinity_enabled"];

  bool client_certificate_enabled = 3 [json_name = "client_certificate_enabled"];

  // Paths to exclude when using client certificates, separated by ;
  string client_certificate_exclusion_paths = 4 [json_name = "client_certificate_exclusion_paths"];

  string client_certificate_mode = 5 [json_name = "client_certificate_mode"];

  string custom_domain_verification_id = 6 [json_name = "custom_domain_verification_id"];

  string default_hostname = 7 [json_name = "default_hostname"];

  bool enabled = 8;

  bool ftp_publish_basic_authentication_enabled = 9 [
    json_name = "ftp_publish_basic_authentication_enabled"
  ];

  string hosting_environment_id = 10 [json_name = "hosting_environment_id"];

  bool https_only = 11 [json_name = "https_only"];

  string id = 12;

  string key_vault_reference_identity_id = 13 [json_name = "key_vault_reference_identity_id"];

  string kind = 14;

  string location = 15;

  string name = 16;

  repeated string outbound_ip_address_list = 17 [json_name = "outbound_ip_address_list"];

  string outbound_ip_addresses = 18 [json_name = "outbound_ip_addresses"];

  repeated string possible_outbound_ip_address_list = 19 [json_name = "possible_outbound_ip_address_list"];

  string possible_outbound_ip_addresses = 20 [json_name = "possible_outbound_ip_addresses"];

  bool public_network_access_enabled = 21 [json_name = "public_network_access_enabled"];

  string resource_group_name = 22 [json_name = "resource_group_name"];

  string service_plan_id = 23 [json_name = "service_plan_id"];

  repeated SiteCredential site_credential = 24 [json_name = "site_credential"];

  map<string, string> tags = 25;

  string virtual_network_subnet_id = 26 [json_name = "virtual_network_subnet_id"];

  bool webdeploy_publish_basic_authentication_enabled = 27 [
    json_name = "webdeploy_publish_basic_authentication_enabled"
  ];

  // The local path and filename of the Zip packaged application to deploy to this
  // Windows Web App. **Note:** Using this value requires either
  // `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set
  // on the App in `app_settings`.
  string zip_deploy_file = 28 [json_name = "zip_deploy_file"];

  AuthSettings auth_settings = 29 [json_name = "auth_settings"];

  AuthSettingsV2 auth_settings_v2 = 30 [json_name = "auth_settings_v2"];

  Backup backup = 31;

  repeated ConnectionString connection_string = 32 [json_name = "connection_string"];

  Identity identity = 33;

  Logs logs = 34;

  SiteConfig site_config = 35 [json_name = "site_config"];

  StickySettings sticky_settings = 36 [json_name = "sticky_settings"];

  repeated StorageAccount storage_account = 37 [json_name = "storage_account"];

  repeated Timeouts timeouts = 38;

  google.protobuf.Value for_each = 39 [json_name = "for_each"];

  repeated string depends_on = 40 [json_name = "depends_on"];

  int32 count = 41;

  string provider = 42;

  terraform.v1.Lifecycle lifecycle = 43;

  message SiteCredential {
    // name: string
    string name = 1;

    // password: string
    string password = 2;
  }

  message AuthSettings {
    // Specifies a map of Login Parameters to send to the OpenID Connect authorization
    // endpoint when a user logs in.
    map<string, string> additional_login_parameters = 1 [json_name = "additional_login_parameters"];

    // Specifies a list of External URLs that can be redirected to as part of logging in
    // or logging out of the Windows Web App.
    repeated string allowed_external_redirect_urls = 2 [json_name = "allowed_external_redirect_urls"];

    // The default authentication provider to use when multiple providers are
    // configured. Possible values include: `AzureActiveDirectory`, `Facebook`,
    // `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
    string default_provider = 3 [json_name = "default_provider"];

    // Should the Authentication / Authorization feature be enabled?
    bool enabled = 4;

    // The OpenID Connect Issuer URI that represents the entity which issues access
    // tokens.
    string issuer = 5;

    // The RuntimeVersion of the Authentication / Authorization feature in use.
    string runtime_version = 6 [json_name = "runtime_version"];

    // The number of hours after session token expiration that a session token can be
    // used to call the token refresh API. Defaults to `72` hours.
    int64 token_refresh_extension_hours = 7 [json_name = "token_refresh_extension_hours"];

    // Should the Windows Web App durably store platform-specific security tokens that
    // are obtained during login flows? Defaults to `false`.
    bool token_store_enabled = 8 [json_name = "token_store_enabled"];

    // The action to take when an unauthenticated client attempts to access the app.
    // Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
    string unauthenticated_client_action = 9 [json_name = "unauthenticated_client_action"];

    ActiveDirectory active_directory = 10 [json_name = "active_directory"];

    Facebook facebook = 11;

    Github github = 12;

    Google google = 13;

    Microsoft microsoft = 14;

    Twitter twitter = 15;

    message ActiveDirectory {
      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 2 [json_name = "client_id"];

      // The Client Secret for the Client ID. Cannot be used with
      // `client_secret_setting_name`.
      string client_secret = 3 [json_name = "client_secret"];

      // The App Setting name that contains the client secret of the Client. Cannot be
      // used with `client_secret`.
      string client_secret_setting_name = 4 [json_name = "client_secret_setting_name"];
    }

    message Facebook {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The App Secret of the Facebook app used for Facebook Login. Cannot be specified
      // with `app_secret_setting_name`.
      string app_secret = 2 [json_name = "app_secret"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login. Cannot be specified with `app_secret`.
      string app_secret_setting_name = 3 [json_name = "app_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login
      // authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Github {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The Client Secret of the GitHub app used for GitHub Login. Cannot be specified
      // with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Google {
      // The OpenID Connect Client ID for the Google web application.
      string client_id = 1 [json_name = "client_id"];

      // The client secret associated with the Google web application.  Cannot be
      // specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of Google
      // Sign-In authentication. If not specified, "openid", "profile", and "email" are
      // used as default scopes.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Microsoft {
      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 1 [json_name = "client_id"];

      // The OAuth 2.0 client secret that was created for the app used for authentication.
      // Cannot be specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account
      // authentication. If not specified, `wl.basic` is used as the default scope.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Twitter {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
      // Cannot be specified with `consumer_secret_setting_name`.
      string consumer_secret = 2 [json_name = "consumer_secret"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in. Cannot be specified with `consumer_secret`.
      string consumer_secret_setting_name = 3 [json_name = "consumer_secret_setting_name"];
    }
  }

  message AuthSettingsV2 {
    // Should the AuthV2 Settings be enabled. Defaults to `false`
    bool auth_enabled = 1 [json_name = "auth_enabled"];

    // The path to the App Auth settings. **Note:** Relative Paths are evaluated from
    // the Site Root directory.
    string config_file_path = 2 [json_name = "config_file_path"];

    // The Default Authentication Provider to use when the `unauthenticated_action` is
    // set to `RedirectToLoginPage`. Possible values include: `apple`,
    // `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name`
    // of your `custom_oidc_v2` provider.
    string default_provider = 3 [json_name = "default_provider"];

    // The paths which should be excluded from the `unauthenticated_action` when it is
    // set to `RedirectToLoginPage`.
    repeated string excluded_paths = 4 [json_name = "excluded_paths"];

    // The convention used to determine the url of the request made. Possible values
    // include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`,
    // `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
    string forward_proxy_convention = 5 [json_name = "forward_proxy_convention"];

    // The name of the header containing the host of the request.
    string forward_proxy_custom_host_header_name = 6 [
      json_name = "forward_proxy_custom_host_header_name"
    ];

    // The name of the header containing the scheme of the request.
    string forward_proxy_custom_scheme_header_name = 7 [
      json_name = "forward_proxy_custom_scheme_header_name"
    ];

    // The prefix that should precede all the authentication and authorisation paths.
    // Defaults to `/.auth`
    string http_route_api_prefix = 8 [json_name = "http_route_api_prefix"];

    // Should the authentication flow be used for all requests.
    bool require_authentication = 9 [json_name = "require_authentication"];

    // Should HTTPS be required on connections? Defaults to true.
    bool require_https = 10 [json_name = "require_https"];

    // The Runtime Version of the Authentication and Authorisation feature of this App.
    // Defaults to `~1`
    string runtime_version = 11 [json_name = "runtime_version"];

    // The action to take for requests made without authentication. Possible values
    // include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`.
    // Defaults to `RedirectToLoginPage`.
    string unauthenticated_action = 12 [json_name = "unauthenticated_action"];

    ActiveDirectoryV2 active_directory_v2 = 13 [json_name = "active_directory_v2"];

    AppleV2 apple_v2 = 14 [json_name = "apple_v2"];

    AzureStaticWebAppV2 azure_static_web_app_v2 = 15 [json_name = "azure_static_web_app_v2"];

    repeated CustomOidcV2 custom_oidc_v2 = 16 [json_name = "custom_oidc_v2"];

    FacebookV2 facebook_v2 = 17 [json_name = "facebook_v2"];

    GithubV2 github_v2 = 18 [json_name = "github_v2"];

    GoogleV2 google_v2 = 19 [json_name = "google_v2"];

    Login login = 20;

    MicrosoftV2 microsoft_v2 = 21 [json_name = "microsoft_v2"];

    TwitterV2 twitter_v2 = 22 [json_name = "twitter_v2"];

    message ActiveDirectoryV2 {
      // The list of allowed Applications for the Default Authorisation Policy.
      repeated string allowed_applications = 1 [json_name = "allowed_applications"];

      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 2 [json_name = "allowed_audiences"];

      // The list of allowed Group Names for the Default Authorisation Policy.
      repeated string allowed_groups = 3 [json_name = "allowed_groups"];

      // The list of allowed Identities for the Default Authorisation Policy.
      repeated string allowed_identities = 4 [json_name = "allowed_identities"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 5 [json_name = "client_id"];

      // The thumbprint of the certificate used for signing purposes.
      string client_secret_certificate_thumbprint = 6 [json_name = "client_secret_certificate_thumbprint"];

      // The App Setting name that contains the client secret of the Client.
      string client_secret_setting_name = 7 [json_name = "client_secret_setting_name"];

      // A list of Allowed Client Applications in the JWT Claim.
      repeated string jwt_allowed_client_applications = 8 [json_name = "jwt_allowed_client_applications"];

      // A list of Allowed Groups in the JWT Claim.
      repeated string jwt_allowed_groups = 9 [json_name = "jwt_allowed_groups"];

      // A map of key-value pairs to send to the Authorisation Endpoint when a user logs
      // in.
      map<string, string> login_parameters = 10 [json_name = "login_parameters"];

      // The Azure Tenant Endpoint for the Authenticating Tenant. e.g.
      // `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
      string tenant_auth_endpoint = 11 [json_name = "tenant_auth_endpoint"];

      // Should the www-authenticate provider should be omitted from the request? Defaults
      // to `false`
      bool www_authentication_disabled = 12 [json_name = "www_authentication_disabled"];
    }

    message AppleV2 {
      // The OpenID Connect Client ID for the Apple web application.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Apple
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message AzureStaticWebAppV2 {
      // The ID of the Client to use to authenticate with Azure Static Web App
      // Authentication.
      string client_id = 1 [json_name = "client_id"];
    }

    message CustomOidcV2 {
      // The endpoint to make the Authorisation Request.
      string authorisation_endpoint = 1 [json_name = "authorisation_endpoint"];

      // The endpoint that provides the keys necessary to validate the token.
      string certification_uri = 2 [json_name = "certification_uri"];

      // The Client Credential Method used. Currently the only supported value is
      // `ClientSecretPost`.
      string client_credential_method = 3 [json_name = "client_credential_method"];

      // The ID of the Client to use to authenticate with this Custom OIDC.
      string client_id = 4 [json_name = "client_id"];

      // The App Setting name that contains the secret for this Custom OIDC Client.
      string client_secret_setting_name = 5 [json_name = "client_secret_setting_name"];

      // The endpoint that issued the Token.
      string issuer_endpoint = 6 [json_name = "issuer_endpoint"];

      // The name of the Custom OIDC Authentication Provider.
      string name = 7;

      // The name of the claim that contains the users name.
      string name_claim_type = 8 [json_name = "name_claim_type"];

      // The endpoint that contains all the configuration endpoints for this Custom OIDC
      // provider.
      string openid_configuration_endpoint = 9 [json_name = "openid_configuration_endpoint"];

      // The list of the scopes that should be requested while authenticating.
      repeated string scopes = 10;

      // The endpoint used to request a Token.
      string token_endpoint = 11 [json_name = "token_endpoint"];
    }

    message FacebookV2 {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login.
      string app_secret_setting_name = 2 [json_name = "app_secret_setting_name"];

      // The version of the Facebook API to be used while logging in.
      string graph_api_version = 3 [json_name = "graph_api_version"];

      // Specifies a list of scopes to be requested as part of Facebook Login
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message GithubV2 {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message GoogleV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Google
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OpenID Connect Client ID for the Google web application.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of Login scopes that will be requested as part of Google Sign-In
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message Login {
      // External URLs that can be redirected to as part of logging in or logging out of
      // the app. This is an advanced setting typically only needed by Windows Store
      // application backends. **Note:** URLs within the current domain are always
      // implicitly allowed.
      repeated string allowed_external_redirect_urls = 1 [json_name = "allowed_external_redirect_urls"];

      // The method by which cookies expire. Possible values include: `FixedTime`, and
      // `IdentityProviderDerived`. Defaults to `FixedTime`.
      string cookie_expiration_convention = 2 [json_name = "cookie_expiration_convention"];

      // The time after the request is made when the session cookie should expire.
      // Defaults to `08:00:00`.
      string cookie_expiration_time = 3 [json_name = "cookie_expiration_time"];

      // The endpoint to which logout requests should be made.
      string logout_endpoint = 4 [json_name = "logout_endpoint"];

      // The time after the request is made when the nonce should expire. Defaults to
      // `00:05:00`.
      string nonce_expiration_time = 5 [json_name = "nonce_expiration_time"];

      // Should the fragments from the request be preserved after the login request is
      // made. Defaults to `false`.
      bool preserve_url_fragments_for_logins = 6 [json_name = "preserve_url_fragments_for_logins"];

      // The number of hours after session token expiration that a session token can be
      // used to call the token refresh API. Defaults to `72` hours.
      int64 token_refresh_extension_time = 7 [json_name = "token_refresh_extension_time"];

      // Should the Token Store configuration Enabled. Defaults to `false`
      bool token_store_enabled = 8 [json_name = "token_store_enabled"];

      // The directory path in the App Filesystem in which the tokens will be stored.
      string token_store_path = 9 [json_name = "token_store_path"];

      // The name of the app setting which contains the SAS URL of the blob storage
      // containing the tokens.
      string token_store_sas_setting_name = 10 [json_name = "token_store_sas_setting_name"];

      // Should the nonce be validated while completing the login flow. Defaults to
      // `true`.
      bool validate_nonce = 11 [json_name = "validate_nonce"];
    }

    message MicrosoftV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Microsoft
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of Login scopes that will be requested as part of Microsoft Account
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message TwitterV2 {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in.
      string consumer_secret_setting_name = 2 [json_name = "consumer_secret_setting_name"];
    }
  }

  message Backup {
    // Should this backup job be enabled?
    bool enabled = 1;

    // The name which should be used for this Backup.
    string name = 2;

    // The SAS URL to the container.
    string storage_account_url = 3 [json_name = "storage_account_url"];

    Schedule schedule = 4;

    message Schedule {
      // How often the backup should be executed (e.g. for weekly backup, this should be
      // set to `7` and `frequency_unit` should be set to `Day`).
      int64 frequency_interval = 1 [json_name = "frequency_interval"];

      // The unit of time for how often the backup should take place. Possible values
      // include: `Day` and `Hour`.
      string frequency_unit = 2 [json_name = "frequency_unit"];

      // Should the service keep at least one backup, regardless of age of backup.
      // Defaults to `false`.
      bool keep_at_least_one_backup = 3 [json_name = "keep_at_least_one_backup"];

      // The time the backup was last attempted.
      string last_execution_time = 4 [json_name = "last_execution_time"];

      // After how many days backups should be deleted.
      int64 retention_period_days = 5 [json_name = "retention_period_days"];

      // When the schedule should start working in RFC-3339 format.
      string start_time = 6 [json_name = "start_time"];
    }
  }

  message ConnectionString {
    // The name which should be used for this Connection.
    string name = 1;

    // Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`,
    // `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`,
    // `RedisCache`, and `PostgreSQL`.
    string type = 2;

    // The connection string value.
    string value = 3;
  }

  message Identity {
    repeated string identity_ids = 1 [json_name = "identity_ids"];

    string principal_id = 2 [json_name = "principal_id"];

    string tenant_id = 3 [json_name = "tenant_id"];

    string type = 4;
  }

  message Logs {
    bool detailed_error_messages = 1 [json_name = "detailed_error_messages"];

    bool failed_request_tracing = 2 [json_name = "failed_request_tracing"];

    ApplicationLogs application_logs = 3 [json_name = "application_logs"];

    HttpLogs http_logs = 4 [json_name = "http_logs"];

    message ApplicationLogs {
      string file_system_level = 1 [json_name = "file_system_level"];

      AzureBlobStorage azure_blob_storage = 2 [json_name = "azure_blob_storage"];

      message AzureBlobStorage {
        string level = 1;

        int64 retention_in_days = 2 [json_name = "retention_in_days"];

        string sas_url = 3 [json_name = "sas_url"];
      }
    }

    message HttpLogs {
      AzureBlobStorage azure_blob_storage = 1 [json_name = "azure_blob_storage"];

      FileSystem file_system = 2 [json_name = "file_system"];

      message AzureBlobStorage {
        int64 retention_in_days = 1 [json_name = "retention_in_days"];

        string sas_url = 2 [json_name = "sas_url"];
      }

      message FileSystem {
        int64 retention_in_days = 1 [json_name = "retention_in_days"];

        int64 retention_in_mb = 2 [json_name = "retention_in_mb"];
      }
    }
  }

  message SiteConfig {
    bool always_on = 1 [json_name = "always_on"];

    string api_definition_url = 2 [json_name = "api_definition_url"];

    string api_management_api_id = 3 [json_name = "api_management_api_id"];

    string app_command_line = 4 [json_name = "app_command_line"];

    bool auto_heal_enabled = 5 [json_name = "auto_heal_enabled"];

    string container_registry_managed_identity_client_id = 6 [
      json_name = "container_registry_managed_identity_client_id"
    ];

    bool container_registry_use_managed_identity = 7 [
      json_name = "container_registry_use_managed_identity"
    ];

    repeated string default_documents = 8 [json_name = "default_documents"];

    bool detailed_error_logging_enabled = 9 [json_name = "detailed_error_logging_enabled"];

    string ftps_state = 10 [json_name = "ftps_state"];

    // The amount of time in minutes that a node is unhealthy before being removed from
    // the load balancer. Possible values are between `2` and `10`. Defaults to `10`.
    // Only valid in conjunction with `health_check_path`
    int64 health_check_eviction_time_in_min = 11 [json_name = "health_check_eviction_time_in_min"];

    string health_check_path = 12 [json_name = "health_check_path"];

    bool http2_enabled = 13 [json_name = "http2_enabled"];

    string ip_restriction_default_action = 14 [json_name = "ip_restriction_default_action"];

    string linux_fx_version = 15 [json_name = "linux_fx_version"];

    string load_balancing_mode = 16 [json_name = "load_balancing_mode"];

    bool local_mysql_enabled = 17 [json_name = "local_mysql_enabled"];

    string managed_pipeline_mode = 18 [json_name = "managed_pipeline_mode"];

    string minimum_tls_version = 19 [json_name = "minimum_tls_version"];

    bool remote_debugging_enabled = 20 [json_name = "remote_debugging_enabled"];

    string remote_debugging_version = 21 [json_name = "remote_debugging_version"];

    string scm_ip_restriction_default_action = 22 [json_name = "scm_ip_restriction_default_action"];

    string scm_minimum_tls_version = 23 [json_name = "scm_minimum_tls_version"];

    string scm_type = 24 [json_name = "scm_type"];

    bool scm_use_main_ip_restriction = 25 [json_name = "scm_use_main_ip_restriction"];

    bool use_32_bit_worker = 26 [json_name = "use_32_bit_worker"];

    // Should all outbound traffic to have Virtual Network Security Groups and User
    // Defined Routes applied? Defaults to `false`.
    bool vnet_route_all_enabled = 27 [json_name = "vnet_route_all_enabled"];

    bool websockets_enabled = 28 [json_name = "websockets_enabled"];

    string windows_fx_version = 29 [json_name = "windows_fx_version"];

    int64 worker_count = 30 [json_name = "worker_count"];

    ApplicationStack application_stack = 31 [json_name = "application_stack"];

    AutoHealSetting auto_heal_setting = 32 [json_name = "auto_heal_setting"];

    Cors cors = 33;

    repeated IpRestriction ip_restriction = 34 [json_name = "ip_restriction"];

    repeated ScmIpRestriction scm_ip_restriction = 35 [json_name = "scm_ip_restriction"];

    repeated VirtualApplication virtual_application = 36 [json_name = "virtual_application"];

    message ApplicationStack {
      string current_stack = 1 [json_name = "current_stack"];

      string docker_container_name = 2 [json_name = "docker_container_name"];

      string docker_container_registry = 3 [json_name = "docker_container_registry"];

      string docker_container_tag = 4 [json_name = "docker_container_tag"];

      string docker_image_name = 5 [json_name = "docker_image_name"];

      string docker_registry_password = 6 [json_name = "docker_registry_password"];

      string docker_registry_url = 7 [json_name = "docker_registry_url"];

      string docker_registry_username = 8 [json_name = "docker_registry_username"];

      // The version of DotNetCore to use.
      string dotnet_core_version = 9 [json_name = "dotnet_core_version"];

      string dotnet_version = 10 [json_name = "dotnet_version"];

      string java_container = 11 [json_name = "java_container"];

      string java_container_version = 12 [json_name = "java_container_version"];

      // Should the application use the embedded web server for the version of Java in
      // use.
      bool java_embedded_server_enabled = 13 [json_name = "java_embedded_server_enabled"];

      string java_version = 14 [json_name = "java_version"];

      string node_version = 15 [json_name = "node_version"];

      string php_version = 16 [json_name = "php_version"];

      bool python = 17;

      string python_version = 18 [json_name = "python_version"];

      string tomcat_version = 19 [json_name = "tomcat_version"];
    }

    message AutoHealSetting {
      Action action = 1;

      Trigger trigger = 2;

      message Action {
        string action_type = 1 [json_name = "action_type"];

        string minimum_process_execution_time = 2 [json_name = "minimum_process_execution_time"];

        CustomAction custom_action = 3 [json_name = "custom_action"];

        message CustomAction {
          string executable = 1;

          string parameters = 2;
        }
      }

      message Trigger {
        int64 private_memory_kb = 1 [json_name = "private_memory_kb"];

        Requests requests = 2;

        SlowRequest slow_request = 3 [json_name = "slow_request"];

        repeated StatusCode status_code = 4 [json_name = "status_code"];

        message Requests {
          int64 count = 1;

          string interval = 2;
        }

        message SlowRequest {
          int64 count = 1;

          string interval = 2;

          string path = 3;

          string time_taken = 4 [json_name = "time_taken"];
        }

        message StatusCode {
          int64 count = 1;

          string interval = 2;

          string path = 3;

          string status_code_range = 4 [json_name = "status_code_range"];

          int64 sub_status = 5 [json_name = "sub_status"];

          int64 win32_status_code = 6 [json_name = "win32_status_code"];
        }
      }
    }

    message Cors {
      // Specifies a list of origins that should be allowed to make cross-origin calls.
      repeated string allowed_origins = 1 [json_name = "allowed_origins"];

      // Are credentials allowed in CORS requests? Defaults to `false`.
      bool support_credentials = 2 [json_name = "support_credentials"];
    }

    message IpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }

    message ScmIpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }

    message VirtualApplication {
      string physical_path = 1 [json_name = "physical_path"];

      bool preload = 2;

      string virtual_path = 3 [json_name = "virtual_path"];

      repeated VirtualDirectory virtual_directory = 4 [json_name = "virtual_directory"];

      message VirtualDirectory {
        string physical_path = 1 [json_name = "physical_path"];

        string virtual_path = 2 [json_name = "virtual_path"];
      }
    }
  }

  message StickySettings {
    repeated string app_setting_names = 1 [json_name = "app_setting_names"];

    repeated string connection_string_names = 2 [json_name = "connection_string_names"];
  }

  message StorageAccount {
    string access_key = 1 [json_name = "access_key"];

    string account_name = 2 [json_name = "account_name"];

    string mount_path = 3 [json_name = "mount_path"];

    string name = 4;

    string share_name = 5 [json_name = "share_name"];

    string type = 6;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string read = 3;

    string update = 4;
  }
}

// AzurermWindowsWebAppSlot version is 1
message AzurermWindowsWebAppSlot {
  string app_service_id = 1 [json_name = "app_service_id"];

  map<string, string> app_settings = 2 [json_name = "app_settings"];

  bool client_affinity_enabled = 3 [json_name = "client_affinity_enabled"];

  bool client_certificate_enabled = 4 [json_name = "client_certificate_enabled"];

  // Paths to exclude when using client certificates, separated by ;
  string client_certificate_exclusion_paths = 5 [json_name = "client_certificate_exclusion_paths"];

  string client_certificate_mode = 6 [json_name = "client_certificate_mode"];

  string custom_domain_verification_id = 7 [json_name = "custom_domain_verification_id"];

  string default_hostname = 8 [json_name = "default_hostname"];

  bool enabled = 9;

  bool ftp_publish_basic_authentication_enabled = 10 [
    json_name = "ftp_publish_basic_authentication_enabled"
  ];

  string hosting_environment_id = 11 [json_name = "hosting_environment_id"];

  bool https_only = 12 [json_name = "https_only"];

  string id = 13;

  string key_vault_reference_identity_id = 14 [json_name = "key_vault_reference_identity_id"];

  string kind = 15;

  string name = 16;

  repeated string outbound_ip_address_list = 17 [json_name = "outbound_ip_address_list"];

  string outbound_ip_addresses = 18 [json_name = "outbound_ip_addresses"];

  repeated string possible_outbound_ip_address_list = 19 [json_name = "possible_outbound_ip_address_list"];

  string possible_outbound_ip_addresses = 20 [json_name = "possible_outbound_ip_addresses"];

  bool public_network_access_enabled = 21 [json_name = "public_network_access_enabled"];

  string service_plan_id = 22 [json_name = "service_plan_id"];

  repeated SiteCredential site_credential = 23 [json_name = "site_credential"];

  map<string, string> tags = 24;

  string virtual_network_subnet_id = 25 [json_name = "virtual_network_subnet_id"];

  bool webdeploy_publish_basic_authentication_enabled = 26 [
    json_name = "webdeploy_publish_basic_authentication_enabled"
  ];

  // The local path and filename of the Zip packaged application to deploy to this
  // Windows Web App. **Note:** Using this value requires `WEBSITE_RUN_FROM_PACKAGE=1`
  // on the App in `app_settings`.
  string zip_deploy_file = 27 [json_name = "zip_deploy_file"];

  AuthSettings auth_settings = 28 [json_name = "auth_settings"];

  AuthSettingsV2 auth_settings_v2 = 29 [json_name = "auth_settings_v2"];

  Backup backup = 30;

  repeated ConnectionString connection_string = 31 [json_name = "connection_string"];

  Identity identity = 32;

  Logs logs = 33;

  SiteConfig site_config = 34 [json_name = "site_config"];

  repeated StorageAccount storage_account = 35 [json_name = "storage_account"];

  repeated Timeouts timeouts = 36;

  google.protobuf.Value for_each = 37 [json_name = "for_each"];

  repeated string depends_on = 38 [json_name = "depends_on"];

  int32 count = 39;

  string provider = 40;

  terraform.v1.Lifecycle lifecycle = 41;

  message SiteCredential {
    // name: string
    string name = 1;

    // password: string
    string password = 2;
  }

  message AuthSettings {
    // Specifies a map of Login Parameters to send to the OpenID Connect authorization
    // endpoint when a user logs in.
    map<string, string> additional_login_parameters = 1 [json_name = "additional_login_parameters"];

    // Specifies a list of External URLs that can be redirected to as part of logging in
    // or logging out of the Windows Web App.
    repeated string allowed_external_redirect_urls = 2 [json_name = "allowed_external_redirect_urls"];

    // The default authentication provider to use when multiple providers are
    // configured. Possible values include: `AzureActiveDirectory`, `Facebook`,
    // `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
    string default_provider = 3 [json_name = "default_provider"];

    // Should the Authentication / Authorization feature be enabled?
    bool enabled = 4;

    // The OpenID Connect Issuer URI that represents the entity which issues access
    // tokens.
    string issuer = 5;

    // The RuntimeVersion of the Authentication / Authorization feature in use.
    string runtime_version = 6 [json_name = "runtime_version"];

    // The number of hours after session token expiration that a session token can be
    // used to call the token refresh API. Defaults to `72` hours.
    int64 token_refresh_extension_hours = 7 [json_name = "token_refresh_extension_hours"];

    // Should the Windows Web App durably store platform-specific security tokens that
    // are obtained during login flows? Defaults to `false`.
    bool token_store_enabled = 8 [json_name = "token_store_enabled"];

    // The action to take when an unauthenticated client attempts to access the app.
    // Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
    string unauthenticated_client_action = 9 [json_name = "unauthenticated_client_action"];

    ActiveDirectory active_directory = 10 [json_name = "active_directory"];

    Facebook facebook = 11;

    Github github = 12;

    Google google = 13;

    Microsoft microsoft = 14;

    Twitter twitter = 15;

    message ActiveDirectory {
      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 2 [json_name = "client_id"];

      // The Client Secret for the Client ID. Cannot be used with
      // `client_secret_setting_name`.
      string client_secret = 3 [json_name = "client_secret"];

      // The App Setting name that contains the client secret of the Client. Cannot be
      // used with `client_secret`.
      string client_secret_setting_name = 4 [json_name = "client_secret_setting_name"];
    }

    message Facebook {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The App Secret of the Facebook app used for Facebook Login. Cannot be specified
      // with `app_secret_setting_name`.
      string app_secret = 2 [json_name = "app_secret"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login. Cannot be specified with `app_secret`.
      string app_secret_setting_name = 3 [json_name = "app_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login
      // authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Github {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The Client Secret of the GitHub app used for GitHub Login. Cannot be specified
      // with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Google {
      // The OpenID Connect Client ID for the Google web application.
      string client_id = 1 [json_name = "client_id"];

      // The client secret associated with the Google web application.  Cannot be
      // specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of Google
      // Sign-In authentication. If not specified, "openid", "profile", and "email" are
      // used as default scopes.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Microsoft {
      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 1 [json_name = "client_id"];

      // The OAuth 2.0 client secret that was created for the app used for authentication.
      // Cannot be specified with `client_secret_setting_name`.
      string client_secret = 2 [json_name = "client_secret"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication. Cannot be specified with `client_secret`.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account
      // authentication. If not specified, `wl.basic` is used as the default scope.
      repeated string oauth_scopes = 4 [json_name = "oauth_scopes"];
    }

    message Twitter {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The OAuth 1.0a consumer secret of the Twitter application used for sign-in.
      // Cannot be specified with `consumer_secret_setting_name`.
      string consumer_secret = 2 [json_name = "consumer_secret"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in. Cannot be specified with `consumer_secret`.
      string consumer_secret_setting_name = 3 [json_name = "consumer_secret_setting_name"];
    }
  }

  message AuthSettingsV2 {
    // Should the AuthV2 Settings be enabled. Defaults to `false`
    bool auth_enabled = 1 [json_name = "auth_enabled"];

    // The path to the App Auth settings. **Note:** Relative Paths are evaluated from
    // the Site Root directory.
    string config_file_path = 2 [json_name = "config_file_path"];

    // The Default Authentication Provider to use when the `unauthenticated_action` is
    // set to `RedirectToLoginPage`. Possible values include: `apple`,
    // `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name`
    // of your `custom_oidc_v2` provider.
    string default_provider = 3 [json_name = "default_provider"];

    // The paths which should be excluded from the `unauthenticated_action` when it is
    // set to `RedirectToLoginPage`.
    repeated string excluded_paths = 4 [json_name = "excluded_paths"];

    // The convention used to determine the url of the request made. Possible values
    // include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`,
    // `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
    string forward_proxy_convention = 5 [json_name = "forward_proxy_convention"];

    // The name of the header containing the host of the request.
    string forward_proxy_custom_host_header_name = 6 [
      json_name = "forward_proxy_custom_host_header_name"
    ];

    // The name of the header containing the scheme of the request.
    string forward_proxy_custom_scheme_header_name = 7 [
      json_name = "forward_proxy_custom_scheme_header_name"
    ];

    // The prefix that should precede all the authentication and authorisation paths.
    // Defaults to `/.auth`
    string http_route_api_prefix = 8 [json_name = "http_route_api_prefix"];

    // Should the authentication flow be used for all requests.
    bool require_authentication = 9 [json_name = "require_authentication"];

    // Should HTTPS be required on connections? Defaults to true.
    bool require_https = 10 [json_name = "require_https"];

    // The Runtime Version of the Authentication and Authorisation feature of this App.
    // Defaults to `~1`
    string runtime_version = 11 [json_name = "runtime_version"];

    // The action to take for requests made without authentication. Possible values
    // include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`.
    // Defaults to `RedirectToLoginPage`.
    string unauthenticated_action = 12 [json_name = "unauthenticated_action"];

    ActiveDirectoryV2 active_directory_v2 = 13 [json_name = "active_directory_v2"];

    AppleV2 apple_v2 = 14 [json_name = "apple_v2"];

    AzureStaticWebAppV2 azure_static_web_app_v2 = 15 [json_name = "azure_static_web_app_v2"];

    repeated CustomOidcV2 custom_oidc_v2 = 16 [json_name = "custom_oidc_v2"];

    FacebookV2 facebook_v2 = 17 [json_name = "facebook_v2"];

    GithubV2 github_v2 = 18 [json_name = "github_v2"];

    GoogleV2 google_v2 = 19 [json_name = "google_v2"];

    Login login = 20;

    MicrosoftV2 microsoft_v2 = 21 [json_name = "microsoft_v2"];

    TwitterV2 twitter_v2 = 22 [json_name = "twitter_v2"];

    message ActiveDirectoryV2 {
      // The list of allowed Applications for the Default Authorisation Policy.
      repeated string allowed_applications = 1 [json_name = "allowed_applications"];

      // Specifies a list of Allowed audience values to consider when validating JWTs
      // issued by Azure Active Directory.
      repeated string allowed_audiences = 2 [json_name = "allowed_audiences"];

      // The list of allowed Group Names for the Default Authorisation Policy.
      repeated string allowed_groups = 3 [json_name = "allowed_groups"];

      // The list of allowed Identities for the Default Authorisation Policy.
      repeated string allowed_identities = 4 [json_name = "allowed_identities"];

      // The ID of the Client to use to authenticate with Azure Active Directory.
      string client_id = 5 [json_name = "client_id"];

      // The thumbprint of the certificate used for signing purposes.
      string client_secret_certificate_thumbprint = 6 [json_name = "client_secret_certificate_thumbprint"];

      // The App Setting name that contains the client secret of the Client.
      string client_secret_setting_name = 7 [json_name = "client_secret_setting_name"];

      // A list of Allowed Client Applications in the JWT Claim.
      repeated string jwt_allowed_client_applications = 8 [json_name = "jwt_allowed_client_applications"];

      // A list of Allowed Groups in the JWT Claim.
      repeated string jwt_allowed_groups = 9 [json_name = "jwt_allowed_groups"];

      // A map of key-value pairs to send to the Authorisation Endpoint when a user logs
      // in.
      map<string, string> login_parameters = 10 [json_name = "login_parameters"];

      // The Azure Tenant Endpoint for the Authenticating Tenant. e.g.
      // `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
      string tenant_auth_endpoint = 11 [json_name = "tenant_auth_endpoint"];

      // Should the www-authenticate provider should be omitted from the request? Defaults
      // to `false`
      bool www_authentication_disabled = 12 [json_name = "www_authentication_disabled"];
    }

    message AppleV2 {
      // The OpenID Connect Client ID for the Apple web application.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Apple
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message AzureStaticWebAppV2 {
      // The ID of the Client to use to authenticate with Azure Static Web App
      // Authentication.
      string client_id = 1 [json_name = "client_id"];
    }

    message CustomOidcV2 {
      // The endpoint to make the Authorisation Request.
      string authorisation_endpoint = 1 [json_name = "authorisation_endpoint"];

      // The endpoint that provides the keys necessary to validate the token.
      string certification_uri = 2 [json_name = "certification_uri"];

      // The Client Credential Method used. Currently the only supported value is
      // `ClientSecretPost`.
      string client_credential_method = 3 [json_name = "client_credential_method"];

      // The ID of the Client to use to authenticate with this Custom OIDC.
      string client_id = 4 [json_name = "client_id"];

      // The App Setting name that contains the secret for this Custom OIDC Client.
      string client_secret_setting_name = 5 [json_name = "client_secret_setting_name"];

      // The endpoint that issued the Token.
      string issuer_endpoint = 6 [json_name = "issuer_endpoint"];

      // The name of the Custom OIDC Authentication Provider.
      string name = 7;

      // The name of the claim that contains the users name.
      string name_claim_type = 8 [json_name = "name_claim_type"];

      // The endpoint that contains all the configuration endpoints for this Custom OIDC
      // provider.
      string openid_configuration_endpoint = 9 [json_name = "openid_configuration_endpoint"];

      // The list of the scopes that should be requested while authenticating.
      repeated string scopes = 10;

      // The endpoint used to request a Token.
      string token_endpoint = 11 [json_name = "token_endpoint"];
    }

    message FacebookV2 {
      // The App ID of the Facebook app used for login.
      string app_id = 1 [json_name = "app_id"];

      // The app setting name that contains the `app_secret` value used for Facebook
      // Login.
      string app_secret_setting_name = 2 [json_name = "app_secret_setting_name"];

      // The version of the Facebook API to be used while logging in.
      string graph_api_version = 3 [json_name = "graph_api_version"];

      // Specifies a list of scopes to be requested as part of Facebook Login
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message GithubV2 {
      // The ID of the GitHub app used for login.
      string client_id = 1 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for GitHub
      // Login.
      string client_secret_setting_name = 2 [json_name = "client_secret_setting_name"];

      // Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub
      // Login authentication.
      repeated string login_scopes = 3 [json_name = "login_scopes"];
    }

    message GoogleV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Google
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OpenID Connect Client ID for the Google web application.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name that contains the `client_secret` value used for Google
      // Login.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // Specifies a list of Login scopes that will be requested as part of Google Sign-In
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message Login {
      // External URLs that can be redirected to as part of logging in or logging out of
      // the app. This is an advanced setting typically only needed by Windows Store
      // application backends. **Note:** URLs within the current domain are always
      // implicitly allowed.
      repeated string allowed_external_redirect_urls = 1 [json_name = "allowed_external_redirect_urls"];

      // The method by which cookies expire. Possible values include: `FixedTime`, and
      // `IdentityProviderDerived`. Defaults to `FixedTime`.
      string cookie_expiration_convention = 2 [json_name = "cookie_expiration_convention"];

      // The time after the request is made when the session cookie should expire.
      // Defaults to `08:00:00`.
      string cookie_expiration_time = 3 [json_name = "cookie_expiration_time"];

      // The endpoint to which logout requests should be made.
      string logout_endpoint = 4 [json_name = "logout_endpoint"];

      // The time after the request is made when the nonce should expire. Defaults to
      // `00:05:00`.
      string nonce_expiration_time = 5 [json_name = "nonce_expiration_time"];

      // Should the fragments from the request be preserved after the login request is
      // made. Defaults to `false`.
      bool preserve_url_fragments_for_logins = 6 [json_name = "preserve_url_fragments_for_logins"];

      // The number of hours after session token expiration that a session token can be
      // used to call the token refresh API. Defaults to `72` hours.
      int64 token_refresh_extension_time = 7 [json_name = "token_refresh_extension_time"];

      // Should the Token Store configuration Enabled. Defaults to `false`
      bool token_store_enabled = 8 [json_name = "token_store_enabled"];

      // The directory path in the App Filesystem in which the tokens will be stored.
      string token_store_path = 9 [json_name = "token_store_path"];

      // The name of the app setting which contains the SAS URL of the blob storage
      // containing the tokens.
      string token_store_sas_setting_name = 10 [json_name = "token_store_sas_setting_name"];

      // Should the nonce be validated while completing the login flow. Defaults to
      // `true`.
      bool validate_nonce = 11 [json_name = "validate_nonce"];
    }

    message MicrosoftV2 {
      // Specifies a list of Allowed Audiences that will be requested as part of Microsoft
      // Sign-In authentication.
      repeated string allowed_audiences = 1 [json_name = "allowed_audiences"];

      // The OAuth 2.0 client ID that was created for the app used for authentication.
      string client_id = 2 [json_name = "client_id"];

      // The app setting name containing the OAuth 2.0 client secret that was created for
      // the app used for authentication.
      string client_secret_setting_name = 3 [json_name = "client_secret_setting_name"];

      // The list of Login scopes that will be requested as part of Microsoft Account
      // authentication.
      repeated string login_scopes = 4 [json_name = "login_scopes"];
    }

    message TwitterV2 {
      // The OAuth 1.0a consumer key of the Twitter application used for sign-in.
      string consumer_key = 1 [json_name = "consumer_key"];

      // The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
      // application used for sign-in.
      string consumer_secret_setting_name = 2 [json_name = "consumer_secret_setting_name"];
    }
  }

  message Backup {
    // Should this backup job be enabled?
    bool enabled = 1;

    // The name which should be used for this Backup.
    string name = 2;

    // The SAS URL to the container.
    string storage_account_url = 3 [json_name = "storage_account_url"];

    Schedule schedule = 4;

    message Schedule {
      // How often the backup should be executed (e.g. for weekly backup, this should be
      // set to `7` and `frequency_unit` should be set to `Day`).
      int64 frequency_interval = 1 [json_name = "frequency_interval"];

      // The unit of time for how often the backup should take place. Possible values
      // include: `Day` and `Hour`.
      string frequency_unit = 2 [json_name = "frequency_unit"];

      // Should the service keep at least one backup, regardless of age of backup.
      // Defaults to `false`.
      bool keep_at_least_one_backup = 3 [json_name = "keep_at_least_one_backup"];

      // The time the backup was last attempted.
      string last_execution_time = 4 [json_name = "last_execution_time"];

      // After how many days backups should be deleted.
      int64 retention_period_days = 5 [json_name = "retention_period_days"];

      // When the schedule should start working in RFC-3339 format.
      string start_time = 6 [json_name = "start_time"];
    }
  }

  message ConnectionString {
    // The name which should be used for this Connection.
    string name = 1;

    // Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`,
    // `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`,
    // `RedisCache`, and `PostgreSQL`.
    string type = 2;

    // The connection string value.
    string value = 3;
  }

  message Identity {
    repeated string identity_ids = 1 [json_name = "identity_ids"];

    string principal_id = 2 [json_name = "principal_id"];

    string tenant_id = 3 [json_name = "tenant_id"];

    string type = 4;
  }

  message Logs {
    bool detailed_error_messages = 1 [json_name = "detailed_error_messages"];

    bool failed_request_tracing = 2 [json_name = "failed_request_tracing"];

    ApplicationLogs application_logs = 3 [json_name = "application_logs"];

    HttpLogs http_logs = 4 [json_name = "http_logs"];

    message ApplicationLogs {
      string file_system_level = 1 [json_name = "file_system_level"];

      AzureBlobStorage azure_blob_storage = 2 [json_name = "azure_blob_storage"];

      message AzureBlobStorage {
        string level = 1;

        int64 retention_in_days = 2 [json_name = "retention_in_days"];

        string sas_url = 3 [json_name = "sas_url"];
      }
    }

    message HttpLogs {
      AzureBlobStorage azure_blob_storage = 1 [json_name = "azure_blob_storage"];

      FileSystem file_system = 2 [json_name = "file_system"];

      message AzureBlobStorage {
        int64 retention_in_days = 1 [json_name = "retention_in_days"];

        string sas_url = 2 [json_name = "sas_url"];
      }

      message FileSystem {
        int64 retention_in_days = 1 [json_name = "retention_in_days"];

        int64 retention_in_mb = 2 [json_name = "retention_in_mb"];
      }
    }
  }

  message SiteConfig {
    bool always_on = 1 [json_name = "always_on"];

    string api_definition_url = 2 [json_name = "api_definition_url"];

    string api_management_api_id = 3 [json_name = "api_management_api_id"];

    string app_command_line = 4 [json_name = "app_command_line"];

    bool auto_heal_enabled = 5 [json_name = "auto_heal_enabled"];

    string auto_swap_slot_name = 6 [json_name = "auto_swap_slot_name"];

    string container_registry_managed_identity_client_id = 7 [
      json_name = "container_registry_managed_identity_client_id"
    ];

    bool container_registry_use_managed_identity = 8 [
      json_name = "container_registry_use_managed_identity"
    ];

    repeated string default_documents = 9 [json_name = "default_documents"];

    bool detailed_error_logging_enabled = 10 [json_name = "detailed_error_logging_enabled"];

    string ftps_state = 11 [json_name = "ftps_state"];

    // The amount of time in minutes that a node is unhealthy before being removed from
    // the load balancer. Possible values are between `2` and `10`. Defaults to `10`.
    // Only valid in conjunction with `health_check_path`
    int64 health_check_eviction_time_in_min = 12 [json_name = "health_check_eviction_time_in_min"];

    string health_check_path = 13 [json_name = "health_check_path"];

    bool http2_enabled = 14 [json_name = "http2_enabled"];

    string ip_restriction_default_action = 15 [json_name = "ip_restriction_default_action"];

    string load_balancing_mode = 16 [json_name = "load_balancing_mode"];

    bool local_mysql_enabled = 17 [json_name = "local_mysql_enabled"];

    string managed_pipeline_mode = 18 [json_name = "managed_pipeline_mode"];

    string minimum_tls_version = 19 [json_name = "minimum_tls_version"];

    bool remote_debugging_enabled = 20 [json_name = "remote_debugging_enabled"];

    string remote_debugging_version = 21 [json_name = "remote_debugging_version"];

    string scm_ip_restriction_default_action = 22 [json_name = "scm_ip_restriction_default_action"];

    string scm_minimum_tls_version = 23 [json_name = "scm_minimum_tls_version"];

    string scm_type = 24 [json_name = "scm_type"];

    bool scm_use_main_ip_restriction = 25 [json_name = "scm_use_main_ip_restriction"];

    bool use_32_bit_worker = 26 [json_name = "use_32_bit_worker"];

    // Should all outbound traffic to have Virtual Network Security Groups and User
    // Defined Routes applied? Defaults to `false`.
    bool vnet_route_all_enabled = 27 [json_name = "vnet_route_all_enabled"];

    bool websockets_enabled = 28 [json_name = "websockets_enabled"];

    string windows_fx_version = 29 [json_name = "windows_fx_version"];

    int64 worker_count = 30 [json_name = "worker_count"];

    ApplicationStack application_stack = 31 [json_name = "application_stack"];

    AutoHealSetting auto_heal_setting = 32 [json_name = "auto_heal_setting"];

    Cors cors = 33;

    repeated IpRestriction ip_restriction = 34 [json_name = "ip_restriction"];

    repeated ScmIpRestriction scm_ip_restriction = 35 [json_name = "scm_ip_restriction"];

    repeated VirtualApplication virtual_application = 36 [json_name = "virtual_application"];

    message ApplicationStack {
      string current_stack = 1 [json_name = "current_stack"];

      string docker_container_name = 2 [json_name = "docker_container_name"];

      string docker_container_registry = 3 [json_name = "docker_container_registry"];

      string docker_container_tag = 4 [json_name = "docker_container_tag"];

      string docker_image_name = 5 [json_name = "docker_image_name"];

      string docker_registry_password = 6 [json_name = "docker_registry_password"];

      string docker_registry_url = 7 [json_name = "docker_registry_url"];

      string docker_registry_username = 8 [json_name = "docker_registry_username"];

      // The version of DotNetCore to use.
      string dotnet_core_version = 9 [json_name = "dotnet_core_version"];

      string dotnet_version = 10 [json_name = "dotnet_version"];

      string java_container = 11 [json_name = "java_container"];

      string java_container_version = 12 [json_name = "java_container_version"];

      // Should the application use the embedded web server for the version of Java in
      // use.
      bool java_embedded_server_enabled = 13 [json_name = "java_embedded_server_enabled"];

      string java_version = 14 [json_name = "java_version"];

      string node_version = 15 [json_name = "node_version"];

      string php_version = 16 [json_name = "php_version"];

      bool python = 17;

      string python_version = 18 [json_name = "python_version"];

      string tomcat_version = 19 [json_name = "tomcat_version"];
    }

    message AutoHealSetting {
      Action action = 1;

      Trigger trigger = 2;

      message Action {
        string action_type = 1 [json_name = "action_type"];

        string minimum_process_execution_time = 2 [json_name = "minimum_process_execution_time"];

        CustomAction custom_action = 3 [json_name = "custom_action"];

        message CustomAction {
          string executable = 1;

          string parameters = 2;
        }
      }

      message Trigger {
        int64 private_memory_kb = 1 [json_name = "private_memory_kb"];

        Requests requests = 2;

        SlowRequest slow_request = 3 [json_name = "slow_request"];

        repeated StatusCode status_code = 4 [json_name = "status_code"];

        message Requests {
          int64 count = 1;

          string interval = 2;
        }

        message SlowRequest {
          int64 count = 1;

          string interval = 2;

          string path = 3;

          string time_taken = 4 [json_name = "time_taken"];
        }

        message StatusCode {
          int64 count = 1;

          string interval = 2;

          string path = 3;

          string status_code_range = 4 [json_name = "status_code_range"];

          int64 sub_status = 5 [json_name = "sub_status"];

          int64 win32_status_code = 6 [json_name = "win32_status_code"];
        }
      }
    }

    message Cors {
      // Specifies a list of origins that should be allowed to make cross-origin calls.
      repeated string allowed_origins = 1 [json_name = "allowed_origins"];

      // Are credentials allowed in CORS requests? Defaults to `false`.
      bool support_credentials = 2 [json_name = "support_credentials"];
    }

    message IpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }

    message ScmIpRestriction {
      // The action to take. Possible values are `Allow` or `Deny`.
      string action = 1;

      // The description of the IP restriction rule.
      string description = 2;

      repeated Headers headers = 3;

      // The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or
      // `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
      string ip_address = 4 [json_name = "ip_address"];

      // The name which should be used for this `ip_restriction`.
      string name = 5;

      // The priority value of this `ip_restriction`.
      int64 priority = 6;

      // The Service Tag used for this IP Restriction.
      string service_tag = 7 [json_name = "service_tag"];

      // The Virtual Network Subnet ID used for this IP Restriction.
      string virtual_network_subnet_id = 8 [json_name = "virtual_network_subnet_id"];

      message Headers {
        // x_azure_fdid: list of string
        repeated string x_azure_fdid = 1 [json_name = "x_azure_fdid"];

        // x_fd_health_probe: list of string
        repeated string x_fd_health_probe = 2 [json_name = "x_fd_health_probe"];

        // x_forwarded_for: list of string
        repeated string x_forwarded_for = 3 [json_name = "x_forwarded_for"];

        // x_forwarded_host: list of string
        repeated string x_forwarded_host = 4 [json_name = "x_forwarded_host"];
      }
    }

    message VirtualApplication {
      string physical_path = 1 [json_name = "physical_path"];

      bool preload = 2;

      string virtual_path = 3 [json_name = "virtual_path"];

      repeated VirtualDirectory virtual_directory = 4 [json_name = "virtual_directory"];

      message VirtualDirectory {
        string physical_path = 1 [json_name = "physical_path"];

        string virtual_path = 2 [json_name = "virtual_path"];
      }
    }
  }

  message StorageAccount {
    string access_key = 1 [json_name = "access_key"];

    string account_name = 2 [json_name = "account_name"];

    string mount_path = 3 [json_name = "mount_path"];

    string name = 4;

    string share_name = 5 [json_name = "share_name"];

    string type = 6;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string read = 3;

    string update = 4;
  }
}
