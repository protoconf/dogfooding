syntax = "proto3";

// Provider: azurerm 3
package terraform.azurerm.datasources.v3;

import "google/protobuf/struct.proto";

import "terraform/v1/meta.proto";

// AzurermSpringCloudApp version is 1
message AzurermSpringCloudApp {
  string fqdn = 1;

  bool https_only = 2 [json_name = "https_only"];

  string id = 3;

  repeated Identity identity = 4;

  bool is_public = 5 [json_name = "is_public"];

  string name = 6;

  repeated PersistentDisk persistent_disk = 7 [json_name = "persistent_disk"];

  string resource_group_name = 8 [json_name = "resource_group_name"];

  string service_name = 9 [json_name = "service_name"];

  bool tls_enabled = 10 [json_name = "tls_enabled"];

  string url = 11;

  repeated Timeouts timeouts = 12;

  google.protobuf.Value for_each = 13 [json_name = "for_each"];

  repeated string depends_on = 14 [json_name = "depends_on"];

  int32 count = 15;

  string provider = 16;

  terraform.v1.Lifecycle lifecycle = 17;

  message Identity {
    // identity_ids: list of string
    repeated string identity_ids = 1 [json_name = "identity_ids"];

    // principal_id: string
    string principal_id = 2 [json_name = "principal_id"];

    // tenant_id: string
    string tenant_id = 3 [json_name = "tenant_id"];

    // type: string
    string type = 4;
  }

  message PersistentDisk {
    // mount_path: string
    string mount_path = 1 [json_name = "mount_path"];

    // size_in_gb: number
    int64 size_in_gb = 2 [json_name = "size_in_gb"];
  }

  message Timeouts {
    string read = 1;
  }
}

// AzurermSpringCloudService version is 1
message AzurermSpringCloudService {
  repeated ConfigServerGitSetting config_server_git_setting = 1 [json_name = "config_server_git_setting"];

  string id = 2;

  string location = 3;

  string name = 4;

  repeated string outbound_public_ip_addresses = 5 [json_name = "outbound_public_ip_addresses"];

  repeated RequiredNetworkTrafficRules required_network_traffic_rules = 6 [json_name = "required_network_traffic_rules"];

  string resource_group_name = 7 [json_name = "resource_group_name"];

  map<string, string> tags = 8;

  repeated Timeouts timeouts = 9;

  google.protobuf.Value for_each = 10 [json_name = "for_each"];

  repeated string depends_on = 11 [json_name = "depends_on"];

  int32 count = 12;

  string provider = 13;

  terraform.v1.Lifecycle lifecycle = 14;

  message ConfigServerGitSetting {
    // http_basic_auth: list of object
    repeated HttpBasicAuth http_basic_auth = 1 [json_name = "http_basic_auth"];

    // label: string
    string label = 2;

    // repository: list of object
    repeated Repository repository = 3;

    // search_paths: list of string
    repeated string search_paths = 4 [json_name = "search_paths"];

    // ssh_auth: list of object
    repeated SshAuth ssh_auth = 5 [json_name = "ssh_auth"];

    // uri: string
    string uri = 6;

    message HttpBasicAuth {
      // password: string
      string password = 1;

      // username: string
      string username = 2;
    }

    message Repository {
      // http_basic_auth: list of object
      repeated HttpBasicAuth http_basic_auth = 1 [json_name = "http_basic_auth"];

      // label: string
      string label = 2;

      // name: string
      string name = 3;

      // pattern: list of string
      repeated string pattern = 4;

      // search_paths: list of string
      repeated string search_paths = 5 [json_name = "search_paths"];

      // ssh_auth: list of object
      repeated SshAuth ssh_auth = 6 [json_name = "ssh_auth"];

      // uri: string
      string uri = 7;

      message HttpBasicAuth {
        // password: string
        string password = 1;

        // username: string
        string username = 2;
      }

      message SshAuth {
        // host_key: string
        string host_key = 1 [json_name = "host_key"];

        // host_key_algorithm: string
        string host_key_algorithm = 2 [json_name = "host_key_algorithm"];

        // private_key: string
        string private_key = 3 [json_name = "private_key"];

        // strict_host_key_checking_enabled: bool
        bool strict_host_key_checking_enabled = 4 [json_name = "strict_host_key_checking_enabled"];
      }
    }

    message SshAuth {
      // host_key: string
      string host_key = 1 [json_name = "host_key"];

      // host_key_algorithm: string
      string host_key_algorithm = 2 [json_name = "host_key_algorithm"];

      // private_key: string
      string private_key = 3 [json_name = "private_key"];

      // strict_host_key_checking_enabled: bool
      bool strict_host_key_checking_enabled = 4 [json_name = "strict_host_key_checking_enabled"];
    }
  }

  message RequiredNetworkTrafficRules {
    // direction: string
    string direction = 1;

    // fqdns: list of string
    repeated string fqdns = 2;

    // ip_addresses: list of string
    repeated string ip_addresses = 3 [json_name = "ip_addresses"];

    // port: number
    int64 port = 4;

    // protocol: string
    string protocol = 5;
  }

  message Timeouts {
    string read = 1;
  }
}
