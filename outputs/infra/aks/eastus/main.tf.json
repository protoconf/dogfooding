{
  "resource": {
    "azurerm_resource_group": {
      "resource_group": {
        "location": "eastus",
        "name": "pconf-dev-eastus"
      }
    },
    "helm_release": {
      "ingress-nginx": {
        "chart": "ingress-nginx",
        "create_namespace": true,
        "name": "ingress-nginx",
        "namespace": "ingress-nginx",
        "repository": "https://kubernetes.github.io/ingress-nginx",
        "values": [
          "controller:\n  service:\n    annotations:\n      service.beta.kubernetes.io/azure-load-balancer-internal: \"false\"\n"
        ],
        "depends_on": [
          "module.aks_cluster"
        ]
      }
    },
    "kubernetes_config_map": {
      "envoy": {
        "data": {
          "envoy.yaml": "admin:\n  address:\n    socket_address:\n      address: 0.0.0.0\n      port_value: 19000\ndynamic_resources:\n  ads_config:\n    api_type: GRPC\n    grpc_services:\n    - envoy_grpc:\n        cluster_name: xds_cluster\n    transport_api_version: V3\n  cds_config:\n    ads: {}\n    resource_api_version: V3\n  lds_config:\n    ads: {}\n    resource_api_version: V3\nnode:\n  cluster: frontend\n  id: mock\nstatic_resources:\n  clusters:\n  - load_assignment:\n      cluster_name: xds_cluster\n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: xds-cluster\n                port_value: 18000\n    name: xds_cluster\n    type: STRICT_DNS\n    typed_extension_protocol_options:\n      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\n        '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\n        explicit_http_config:\n          http2_protocol_options: {}\n"
        },
        "metadata": {
          "name": "envoy",
          "namespace": "default"
        }
      }
    },
    "kubernetes_daemon_set_v1": {
      "protoconf-agent": {
        "metadata": {
          "labels": {
            "port_name": "protoconf"
          },
          "name": "protoconf-agent",
          "namespace": "protoconf"
        },
        "spec": {
          "selector": {
            "match_labels": {
              "port_name": "protoconf"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "port_name": "protoconf"
              }
            },
            "spec": {
              "container": [
                {
                  "args": [
                    "agent",
                    "-store",
                    "etcd",
                    "-store-address",
                    "etcd:2380"
                  ],
                  "image": "ghcr.io/protoconf/protoconf:latest",
                  "name": "protoconf-agent",
                  "port": [
                    {
                      "container_port": "4300",
                      "name": "protoconf",
                      "protocol": "TCP"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "kubernetes_deployment": {
      "envoy": {
        "metadata": {
          "labels": {
            "port_name": "envoy"
          },
          "name": "envoy",
          "namespace": "default"
        },
        "spec": {
          "replicas": "2",
          "selector": {
            "match_labels": {
              "port_name": "envoy"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "port_name": "envoy"
              }
            },
            "spec": {
              "container": [
                {
                  "image": "envoyproxy/envoy:v1.30-latest",
                  "name": "envoy",
                  "port": [
                    {
                      "container_port": "10000",
                      "name": "envoy",
                      "protocol": "TCP"
                    }
                  ],
                  "volume_mount": [
                    {
                      "mount_path": "/etc/envoy",
                      "name": "envoy"
                    }
                  ]
                }
              ],
              "volume": [
                {
                  "name": "envoy",
                  "config_map": {
                    "default_mode": "0755",
                    "name": "envoy"
                  }
                }
              ]
            }
          }
        }
      }
    },
    "kubernetes_namespace": {
      "protoconf": {
        "metadata": {
          "name": "protoconf"
        }
      }
    },
    "kubernetes_service": {
      "envoy": {
        "metadata": {
          "annotations": {
            "service.beta.kubernetes.io/azure-load-balancer-internal": "false"
          },
          "name": "envoy",
          "namespace": "default"
        },
        "spec": {
          "selector": {
            "port_name": "envoy"
          },
          "type": "LoadBalancer",
          "port": [
            {
              "name": "envoy",
              "port": "10000",
              "protocol": "TCP",
              "target_port": "10000"
            }
          ]
        }
      },
      "etcd": {
        "metadata": {
          "name": "etcd",
          "namespace": "protoconf"
        },
        "spec": {
          "cluster_ip": "None",
          "selector": {
            "port_name": "etcd"
          },
          "type": "ClusterIP",
          "port": [
            {
              "name": "client",
              "port": "2379",
              "protocol": "TCP",
              "target_port": "2379"
            }
          ]
        }
      },
      "etcd-client": {
        "metadata": {
          "name": "etcd-client",
          "namespace": "protoconf"
        },
        "spec": {
          "selector": {
            "port_name": "etcd-client"
          },
          "type": "ClusterIP",
          "port": [
            {
              "name": "etcd-client",
              "port": "2379",
              "protocol": "TCP",
              "target_port": "2379"
            }
          ]
        }
      },
      "protoconf": {
        "metadata": {
          "name": "protoconf",
          "namespace": "protoconf"
        },
        "spec": {
          "selector": {
            "port_name": "protoconf"
          },
          "type": "ClusterIP",
          "port": [
            {
              "name": "protoconf",
              "port": "4300",
              "protocol": "TCP",
              "target_port": "4300"
            }
          ]
        }
      }
    },
    "kubernetes_stateful_set": {
      "etcd": {
        "metadata": {
          "labels": {
            "port_name": "etcd"
          },
          "name": "etcd",
          "namespace": "protoconf"
        },
        "spec": {
          "replicas": "3",
          "service_name": "etcd",
          "selector": {
            "match_labels": {
              "port_name": "etcd"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "port_name": "etcd"
              }
            },
            "spec": {
              "container": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "etcd --name $${HOSTNAME} --advertise-client-urls http://$${HOSTNAME}.etcd:2379 --initial-advertise-peer-urls http://$${HOSTNAME}:2380 --initial-cluster etcd-0=http://etcd-0.etcd:2380,etcd-1=http://etcd-1.etcd:2380,etcd-2=http://etcd-2.etcd:2380"
                  ],
                  "image": "quay.io/coreos/etcd:latest",
                  "name": "etcd",
                  "env": [
                    {
                      "name": "ETCD_LISTEN_PEER_URLS",
                      "value": "http://0.0.0.0:2380"
                    },
                    {
                      "name": "ETCD_LISTEN_CLIENT_URLS",
                      "value": "http://0.0.0.0:2379"
                    },
                    {
                      "name": "ETCD_DATA_DIR",
                      "value": "/var/run/etcd/default.etcd"
                    }
                  ],
                  "port": [
                    {
                      "container_port": "2379",
                      "name": "etcd-client",
                      "protocol": "TCP"
                    },
                    {
                      "container_port": "2380",
                      "name": "peer",
                      "protocol": "TCP"
                    },
                    {
                      "container_port": "2379",
                      "name": "client",
                      "protocol": "TCP"
                    }
                  ],
                  "volume_mount": [
                    {
                      "mount_path": "/var/run/etcd",
                      "name": "data"
                    }
                  ]
                }
              ]
            }
          },
          "volume_claim_template": [
            {
              "metadata": {
                "name": "data",
                "namespace": "protoconf"
              },
              "spec": {
                "access_modes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "10Gi"
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  "provider": {
    "azurerm": [
      {
        "features": {
          "resource_group": {
            "prevent_deletion_if_contains_resources": false
          }
        }
      }
    ],
    "helm": [
      {
        "kubernetes": {
          "client_certificate": "${base64decode(module.aks_cluster.client_certificate)}",
          "client_key": "${base64decode(module.aks_cluster.client_key)}",
          "cluster_ca_certificate": "${base64decode(module.aks_cluster.cluster_ca_certificate)}",
          "host": "${module.aks_cluster.host}"
        }
      }
    ],
    "http": [
      {
        
      }
    ],
    "kubernetes": [
      {
        "client_certificate": "${base64decode(module.aks_cluster.client_certificate)}",
        "client_key": "${base64decode(module.aks_cluster.client_key)}",
        "cluster_ca_certificate": "${base64decode(module.aks_cluster.cluster_ca_certificate)}",
        "host": "${module.aks_cluster.host}"
      }
    ]
  },
  "module": {
    "aks_cluster": {
    "create_role_assignments_for_application_gateway": false,
    "depends_on": [
          "azurerm_resource_group.resource_group"
        ],
    "green_field_application_gateway_for_ingress": {
          "name": "ingress",
          "subnet_cidr": "10.225.0.0/16"
        },
    "identity_type": "SystemAssigned",
    "network_policy": "calico",
    "prefix": "pconf-dev-eastus",
    "rbac_aad": false,
    "resource_group_name": "${azurerm_resource_group.resource_group.name}",
    "role_based_access_control_enabled": false,
    "source": "Azure/aks/azurerm",
    "version": "8.0.0"
  }
  }
}